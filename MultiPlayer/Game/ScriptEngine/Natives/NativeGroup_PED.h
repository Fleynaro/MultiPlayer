#pragma once



#include "../IGameNativeGroup.h"


namespace SE {
	class PED : public IGameNativeGroup<PED>
	{
	public:
		static GameNative<Ped(int pedType, Hash modelHash, float x, float y, float z, float heading, BOOL isNetwork, BOOL thisScriptCheck), 0xD49F9B0955C367DE> CREATE_PED;
		static GameNative<void(Ped* ped), 0x9614299DCB53E54B> DELETE_PED;
		static GameNative<Ped(Ped ped, float heading, BOOL isNetwork, BOOL thisScriptCheck), 0xEF29A16337FACADB> CLONE_PED;
		static GameNative<void(Ped ped, Ped targetPed), 0xE952D6431689AD9A> CLONE_PED_TO_TARGET;
		static GameNative<BOOL(Ped ped, Vehicle vehicle, BOOL atGetIn), 0xA3EE4A07279BB9DB> IS_PED_IN_VEHICLE;
		static GameNative<BOOL(Ped ped, Hash modelHash), 0x796D90EFB19AA332> IS_PED_IN_MODEL;
		static GameNative<BOOL(Ped ped, BOOL atGetIn), 0x997ABD671D25CA0B> IS_PED_IN_ANY_VEHICLE;
		static GameNative<BOOL(float x1, float y1, float z1, float x2, float y2, float z2), 0x16EC4839969F9F5E> IS_COP_PED_IN_AREA_3D;
		static GameNative<BOOL(Ped ped), 0x84A2DD9AC37C35C1> IS_PED_INJURED;
		static GameNative<BOOL(Ped ped), 0x5983BB449D7FDB12> IS_PED_HURT;
		static GameNative<BOOL(Ped ped), 0xD839450756ED5A80> IS_PED_FATALLY_INJURED;
		static GameNative<BOOL(Ped ped, BOOL p1), 0x3317DEDB88C95038> IS_PED_DEAD_OR_DYING;
		static GameNative<BOOL(Ped ped), 0xE0A0AEC214B1FABA> IS_CONVERSATION_PED_DEAD;
		static GameNative<BOOL(Ped ped), 0x3998B1276A3300E5> IS_PED_AIMING_FROM_COVER;
		static GameNative<BOOL(Ped ped), 0x24B100C68C645951> IS_PED_RELOADING;
		static GameNative<BOOL(Ped ped), 0x12534C348C6CB68B> IS_PED_A_PLAYER;
		static GameNative<Ped(Vehicle vehicle, int pedType, Hash modelHash, int seat, BOOL isNetwork, BOOL thisScriptCheck), 0x7DD959874C1FD534> CREATE_PED_INSIDE_VEHICLE;
		static GameNative<void(Ped ped, float heading), 0xAA5A7ECE2AA8FE70> SET_PED_DESIRED_HEADING;
		static GameNative<void(Ped ped), 0xFF287323B0E2C69A> _FREEZE_PED_CAMERA_ROTATION;
		static GameNative<BOOL(Ped ped, Ped otherPed, float angle), 0xD71649DB0A545AA3> IS_PED_FACING_PED;
		static GameNative<BOOL(Ped ped), 0x4E209B2C1EAD5159> IS_PED_IN_MELEE_COMBAT;
		static GameNative<BOOL(Ped ped), 0x530944F6F4B8A214> IS_PED_STOPPED;
		static GameNative<BOOL(Ped ped, float x1, float y1, float z1, float x2, float y2, float z2, BOOL p7, BOOL p8), 0x7E9DFE24AC1E58EF> IS_PED_SHOOTING_IN_AREA;
		static GameNative<BOOL(float x1, float y1, float z1, float x2, float y2, float z2, BOOL p6, BOOL p7), 0xA0D3D71EA1086C55> IS_ANY_PED_SHOOTING_IN_AREA;
		static GameNative<BOOL(Ped ped), 0x34616828CD07F1A1> IS_PED_SHOOTING;
		static GameNative<void(Ped ped, int accuracy), 0x7AEFB85C1D49DEB6> SET_PED_ACCURACY;
		static GameNative<int(Ped ped), 0x37F4AD56ECBC0CD6> GET_PED_ACCURACY;
		static GameNative<BOOL(Ped ped, Hash modelHash), 0xC9D55B1A358A5BF7> IS_PED_MODEL;
		static GameNative<void(Ped ped, Hash weaponHash), 0x2D05CED3A38D0F3A> EXPLODE_PED_HEAD;
		static GameNative<void(Ped* ped), 0xAC6D445B994DF95E> REMOVE_PED_ELEGANTLY;
		static GameNative<void(Ped ped, int amount), 0x5BA652A0CD14DF2F> ADD_ARMOUR_TO_PED;
		static GameNative<void(Ped ped, int amount), 0xCEA04D83135264CC> SET_PED_ARMOUR;
		static GameNative<void(Ped ped, Vehicle vehicle, int seatIndex), 0xF75B0D629E1C063D> SET_PED_INTO_VEHICLE;
		static GameNative<void(Ped ped, BOOL toggle), 0x3C028C636A414ED9> SET_PED_ALLOW_VEHICLES_OVERRIDE;
		static GameNative<BOOL(BOOL unk), 0x3E8349C08E4B82E4> CAN_CREATE_RANDOM_PED;
		static GameNative<Ped(float posX, float posY, float posZ), 0xB4AC7D0CF06BFE8F> CREATE_RANDOM_PED;
		static GameNative<Ped(Vehicle vehicle, BOOL returnHandle), 0x9B62392B474F44A0> CREATE_RANDOM_PED_AS_DRIVER;
		static GameNative<BOOL(), 0xB8EB95E5B4E56978> CAN_CREATE_RANDOM_DRIVER;
		static GameNative<BOOL(), 0xEACEEDA81751915C> CAN_CREATE_RANDOM_BIKE_RIDER;
		static GameNative<void(Ped ped), 0x9E8C908F41584ECD> SET_PED_MOVE_ANIMS_BLEND_OUT;
		static GameNative<void(Ped ped, BOOL toggle), 0xC1670E958EEE24E5> SET_PED_CAN_BE_DRAGGED_OUT;
		static GameNative<void(BOOL toggle), 0xF2BEBCDFAFDAA19E> _0xF2BEBCDFAFDAA19E;
		static GameNative<BOOL(Ped ped), 0x6D9F5FAA7488BA46> IS_PED_MALE;
		static GameNative<BOOL(Ped ped), 0xB980061DA992779D> IS_PED_HUMAN;
		static GameNative<Vehicle(Ped ped, BOOL lastVehicle), 0x9A9112A0FE9A4713> GET_VEHICLE_PED_IS_IN;
		static GameNative<void(Ped ped), 0xBB8DE8CF6A8DD8BB> RESET_PED_LAST_VEHICLE;
		static GameNative<void(float multiplier), 0x95E3D6257B166CF2> SET_PED_DENSITY_MULTIPLIER_THIS_FRAME;
		static GameNative<void(float p0, float p1), 0x7A556143A1C03898> SET_SCENARIO_PED_DENSITY_MULTIPLIER_THIS_FRAME;
		static GameNative<void(), 0x5A7F62FDA59759BD> _0x5A7F62FDA59759BD;
		static GameNative<void(float x, float y, float z), 0x5086C7843552CF85> SET_SCRIPTED_CONVERSION_COORD_THIS_FRAME;
		static GameNative<void(float x1, float y1, float z1, float x2, float y2, float z2), 0xEE01041D559983EA> SET_PED_NON_CREATION_AREA;
		static GameNative<void(), 0x2E05208086BA0651> CLEAR_PED_NON_CREATION_AREA;
		static GameNative<void(), 0x4759CC730F947C81> _0x4759CC730F947C81;
		static GameNative<BOOL(Ped ped), 0x460BC76A0E10655E> IS_PED_ON_MOUNT;
		static GameNative<Ped(Ped ped), 0xE7E11B8DCBED1058> GET_MOUNT;
		static GameNative<BOOL(Ped ped), 0x67722AEB798E5FAB> IS_PED_ON_VEHICLE;
		static GameNative<BOOL(Ped ped, Vehicle vehicle), 0xEC5F66E459AF3BB2> IS_PED_ON_SPECIFIC_VEHICLE;
		static GameNative<void(Ped ped, int amount), 0xA9C8960E8684C1B5> SET_PED_MONEY;
		static GameNative<int(Ped ped), 0x3F69145BBA87BAE7> GET_PED_MONEY;
		static GameNative<void(float p0, Any p1), 0xFF4803BC019852D9> _0xFF4803BC019852D9;
		static GameNative<void(BOOL p0), 0x6B0E6172C9A4D902> _0x6B0E6172C9A4D902;
		static GameNative<void(BOOL p0), 0x9911F4A24485F653> _0x9911F4A24485F653;
		static GameNative<void(Ped ped, BOOL toggle), 0xEBD76F2359F190AC> SET_PED_SUFFERS_CRITICAL_HITS;
		static GameNative<void(Ped ped, BOOL toggle), 0xAFC976FD0580C7B3> _0xAFC976FD0580C7B3;
		static GameNative<BOOL(Ped ped, Vehicle vehicle), 0xA808AA1D79230FC2> IS_PED_SITTING_IN_VEHICLE;
		static GameNative<BOOL(Ped ped), 0x826AA586EDB9FEF8> IS_PED_SITTING_IN_ANY_VEHICLE;
		static GameNative<BOOL(Ped ped), 0x01FEE67DB37F59B2> IS_PED_ON_FOOT;
		static GameNative<BOOL(Ped ped), 0x94495889E22C6479> IS_PED_ON_ANY_BIKE;
		static GameNative<BOOL(Ped ped), 0xC70B5FAE151982D8> IS_PED_PLANTING_BOMB;
		static GameNative<Vector3(Ped ped, float p1, float p2), 0xCD5003B097200F36> GET_DEAD_PED_PICKUP_COORDS;
		static GameNative<BOOL(Ped ped), 0x2E0E1C2B4F6CB339> IS_PED_IN_ANY_BOAT;
		static GameNative<BOOL(Ped ped), 0xFBFC01CCFB35D99E> IS_PED_IN_ANY_SUB;
		static GameNative<BOOL(Ped ped), 0x298B91AE825E5705> IS_PED_IN_ANY_HELI;
		static GameNative<BOOL(Ped ped), 0x5FFF4CFC74D8FB80> IS_PED_IN_ANY_PLANE;
		static GameNative<BOOL(Ped ped), 0x9134873537FA419C> IS_PED_IN_FLYING_VEHICLE;
		static GameNative<void(Ped ped, BOOL toggle), 0x56CEF0AC79073BDE> SET_PED_DIES_IN_WATER;
		static GameNative<void(Ped ped, BOOL toggle), 0xD718A22995E2B4BC> SET_PED_DIES_IN_SINKING_VEHICLE;
		static GameNative<int(Ped ped), 0x9483AF821605B1D8> GET_PED_ARMOUR;
		static GameNative<void(Ped ped, BOOL toggle), 0xEDF4079F9D54C9A1> SET_PED_STAY_IN_VEHICLE_WHEN_JACKED;
		static GameNative<void(Ped ped, BOOL toggle), 0xC7EF1BA83230BA07> SET_PED_CAN_BE_SHOT_IN_VEHICLE;
		static GameNative<BOOL(Ped ped, int* outBone), 0xD75960F6BD9EA49C> GET_PED_LAST_DAMAGE_BONE;
		static GameNative<void(Ped ped), 0x8EF6B7AC68E2F01B> CLEAR_PED_LAST_DAMAGE_BONE;
		static GameNative<void(float value), 0x1B1E2A40A65B8521> SET_AI_WEAPON_DAMAGE_MODIFIER;
		static GameNative<void(), 0xEA16670E7BA4743C> RESET_AI_WEAPON_DAMAGE_MODIFIER;
		static GameNative<void(float modifier), 0x66460DEDDD417254> SET_AI_MELEE_WEAPON_DAMAGE_MODIFIER;
		static GameNative<void(), 0x46E56A7CD1D63C3F> RESET_AI_MELEE_WEAPON_DAMAGE_MODIFIER;
		static GameNative<void(Any p0, BOOL p1), 0x2F3C3D9F50681DE4> _0x2F3C3D9F50681DE4;
		static GameNative<void(Ped ped, BOOL toggle), 0x63F58F7C80513AAD> SET_PED_CAN_BE_TARGETTED;
		static GameNative<void(Ped ped, int team, BOOL toggle), 0xBF1CA77833E58F2C> SET_PED_CAN_BE_TARGETTED_BY_TEAM;
		static GameNative<void(Ped ped, Player player, BOOL toggle), 0x66B57B72E0836A76> SET_PED_CAN_BE_TARGETTED_BY_PLAYER;
		static GameNative<void(Any p0, BOOL p1), 0x061CB768363D6424> _0x061CB768363D6424;
		static GameNative<void(Any p0, BOOL p1), 0xFD325494792302D7> SET_TIME_EXCLUSIVE_DISPLAY_TEXTURE;
		static GameNative<BOOL(Ped ped), 0x0BD04E29640C9C12> IS_PED_IN_ANY_POLICE_VEHICLE;
		static GameNative<void(Ped ped), 0x16E42E800B472221> FORCE_PED_TO_OPEN_PARACHUTE;
		static GameNative<BOOL(Ped ped), 0x7DCE8BDA0F1C1200> IS_PED_IN_PARACHUTE_FREE_FALL;
		static GameNative<BOOL(Ped ped), 0xFB92A102F1C4DFA3> IS_PED_FALLING;
		static GameNative<BOOL(Ped ped), 0xCEDABC5900A0BF97> IS_PED_JUMPING;
		static GameNative<BOOL(Ped ped), 0x53E8CB4F48BFE623> IS_PED_CLIMBING;
		static GameNative<BOOL(Ped ped), 0x117C70D1F5730B5E> IS_PED_VAULTING;
		static GameNative<BOOL(Ped ped), 0x5527B8246FEF9B11> IS_PED_DIVING;
		static GameNative<BOOL(Ped ped), 0x433DDFFE2044B636> IS_PED_JUMPING_OUT_OF_VEHICLE;
		static GameNative<BOOL(Ped ped), 0x26AF0E8E30BD2A2C> _0x26AF0E8E30BD2A2C;
		static GameNative<int(Ped ped), 0x79CFD9827CC979B6> GET_PED_PARACHUTE_STATE;
		static GameNative<int(Ped ped), 0x8B9F1FC6AE8166C0> GET_PED_PARACHUTE_LANDING_TYPE;
		static GameNative<void(Ped ped, int tintIndex), 0x333FC8DB079B7186> SET_PED_PARACHUTE_TINT_INDEX;
		static GameNative<void(Ped ped, int* outTintIndex), 0xEAF5F7E5AE7C6C9D> GET_PED_PARACHUTE_TINT_INDEX;
		static GameNative<void(Ped ped, Any p1), 0xE88DA0751C22A2AD> SET_PED_RESERVE_PARACHUTE_TINT_INDEX;
		static GameNative<Entity(Ped ped, BOOL p1, BOOL p2), 0x8C4F3BF23B6237DB> _0x8C4F3BF23B6237DB;
		static GameNative<void(Ped ped, BOOL toggle), 0x030983CA930B692D> SET_PED_DUCKING;
		static GameNative<BOOL(Ped ped), 0xD125AE748725C6BC> IS_PED_DUCKING;
		static GameNative<BOOL(Ped ped), 0x6E575D6A898AB852> IS_PED_IN_ANY_TAXI;
		static GameNative<void(Ped ped, float value), 0xF107E836A70DCE05> SET_PED_ID_RANGE;
		static GameNative<void(Ped ped, BOOL p1), 0x52D59AB61DDC05DD> _0x52D59AB61DDC05DD;
		static GameNative<void(Ped ped, float unk), 0xEC4B4B3B9908052A> _0xEC4B4B3B9908052A;
		static GameNative<void(Any p0), 0x733C87D4CE22BEA2> _0x733C87D4CE22BEA2;
		static GameNative<void(Ped ped, float value), 0xF29CF591C4BF6CEE> SET_PED_SEEING_RANGE;
		static GameNative<void(Ped ped, float value), 0x33A8F7F7D5F7F33C> SET_PED_HEARING_RANGE;
		static GameNative<void(Ped ped, float value), 0x2DB492222FB21E26> SET_PED_VISUAL_FIELD_MIN_ANGLE;
		static GameNative<void(Ped ped, float value), 0x70793BDCA1E854D4> SET_PED_VISUAL_FIELD_MAX_ANGLE;
		static GameNative<void(Ped ped, float angle), 0x7A276EB2C224D70F> SET_PED_VISUAL_FIELD_MIN_ELEVATION_ANGLE;
		static GameNative<void(Ped ped, float angle), 0x78D0B67629D75856> SET_PED_VISUAL_FIELD_MAX_ELEVATION_ANGLE;
		static GameNative<void(Ped ped, float range), 0x9C74B0BC831B753A> SET_PED_VISUAL_FIELD_PERIPHERAL_RANGE;
		static GameNative<void(Ped ped, float angle), 0x3B6405E8AB34A907> SET_PED_VISUAL_FIELD_CENTER_ANGLE;
		static GameNative<void(Ped ped, BOOL p1, char* action), 0x88CBB5CEB96B7BD2> SET_PED_STEALTH_MOVEMENT;
		static GameNative<BOOL(Ped ped), 0x7C2AC9CA66575FBF> GET_PED_STEALTH_MOVEMENT;
		static GameNative<int(int unused), 0x90370EBE0FEE1A3D> CREATE_GROUP;
		static GameNative<void(Ped ped, int groupId), 0x2A7819605465FBCE> SET_PED_AS_GROUP_LEADER;
		static GameNative<void(Ped ped, int groupId), 0x9F3480FE65DB31B5> SET_PED_AS_GROUP_MEMBER;
		static GameNative<void(Ped pedHandle, int groupHandle, BOOL toggle), 0x2E2F4240B3F24647> SET_PED_CAN_TELEPORT_TO_GROUP_LEADER;
		static GameNative<void(int groupId), 0x8EB2F69076AF7053> REMOVE_GROUP;
		static GameNative<void(Ped ped), 0xED74007FFB146BC2> REMOVE_PED_FROM_GROUP;
		static GameNative<BOOL(Ped ped, int groupId), 0x9BB01E3834671191> IS_PED_GROUP_MEMBER;
		static GameNative<BOOL(Ped ped), 0x1C86D8AEF8254B78> IS_PED_HANGING_ON_TO_VEHICLE;
		static GameNative<void(int groupHandle, float separationRange), 0x4102C7858CFEE4E4> SET_GROUP_SEPARATION_RANGE;
		static GameNative<void(Ped ped, int ms1000000), 0xFA0675AB151073FA> SET_PED_MIN_GROUND_TIME_FOR_STUNGUN;
		static GameNative<BOOL(Ped ped), 0xD6A86331A537A7B9> IS_PED_PRONE;
		static GameNative<BOOL(Ped ped, Ped target), 0x4859F1FC66A6278E> IS_PED_IN_COMBAT;
		static GameNative<BOOL(Ped ped, Ped target), 0xEAD42DE3610D0721> CAN_PED_IN_COMBAT_SEE_TARGET;
		static GameNative<BOOL(Ped ped), 0xB2C086CC1BF8F2BF> IS_PED_DOING_DRIVEBY;
		static GameNative<BOOL(Ped ped), 0x4AE4FF911DFB61DA> IS_PED_JACKING;
		static GameNative<BOOL(Ped ped), 0x9A497FE2DF198913> IS_PED_BEING_JACKED;
		static GameNative<BOOL(Ped ped, int p1), 0x4FBACCE3B4138EE8> IS_PED_BEING_STUNNED;
		static GameNative<Ped(Ped ped), 0x9B128DC36C1E04CF> GET_PEDS_JACKER;
		static GameNative<Ped(Ped ped), 0x5486A79D9FBD342D> GET_JACK_TARGET;
		static GameNative<BOOL(Ped ped), 0xBBCCE00B381F8482> IS_PED_FLEEING;
		static GameNative<BOOL(Ped ped, BOOL exceptUseWeapon), 0x60DFD0691A170B88> IS_PED_IN_COVER;
		static GameNative<BOOL(Ped ped), 0x845333B3150583AB> IS_PED_IN_COVER_FACING_LEFT;
		static GameNative<BOOL(Ped ped), 0x6A03BF943D767C93> _IS_PED_STANDING_IN_COVER;
		static GameNative<BOOL(Ped ped), 0x9F65DBC537E59AD5> IS_PED_GOING_INTO_COVER;
		static GameNative<Any(Ped player, BOOL pinned, int p2), 0xAAD6D1ACF08F4612> SET_PED_PINNED_DOWN;
		static GameNative<int(Ped ped), 0x6F4C85ACD641BCD2> GET_SEAT_PED_IS_TRYING_TO_ENTER;
		static GameNative<Vehicle(Ped ped), 0x814FA8BE5449445D> GET_VEHICLE_PED_IS_TRYING_TO_ENTER;
		static GameNative<Entity(Ped ped), 0x93C8B64DEB84728C> GET_PED_SOURCE_OF_DEATH;
		static GameNative<Hash(Ped ped), 0x16FFE42AB2D2DC59> GET_PED_CAUSE_OF_DEATH;
		static GameNative<int(Ped ped), 0x1E98817B311AE98A> _0x1E98817B311AE98A;
		static GameNative<int(Any p0), 0x5407B7288D0478B7> _0x5407B7288D0478B7;
		static GameNative<BOOL(Ped ped, float x, float y, float z, float range), 0x336B3D200AB007CB> _IS_ENEMY_IN_RANGE;
		static GameNative<void(Ped ped, Hash hash), 0xADB3F206518799E8> SET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH;
		static GameNative<void(Ped ped, Hash hash), 0xC80A74AC829DDD92> SET_PED_RELATIONSHIP_GROUP_HASH;
		static GameNative<void(int relationship, Hash group1, Hash group2), 0xBF25EB89375A37AD> SET_RELATIONSHIP_BETWEEN_GROUPS;
		static GameNative<void(int relationship, Hash group1, Hash group2), 0x5E29243FB56FC6D4> CLEAR_RELATIONSHIP_BETWEEN_GROUPS;
		static GameNative<Any(char* name, Hash* groupHash), 0xF372BC22FCB88606> ADD_RELATIONSHIP_GROUP;
		static GameNative<void(Hash groupHash), 0xB6BA2444AB393DA2> REMOVE_RELATIONSHIP_GROUP;
		static GameNative<int(Ped ped1, Ped ped2), 0xEBA5AD3A0EAF7121> GET_RELATIONSHIP_BETWEEN_PEDS;
		static GameNative<Hash(Ped ped), 0x42FDD0F017B1E38E> GET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH;
		static GameNative<Hash(Ped ped), 0x7DBDD04862D95F04> GET_PED_RELATIONSHIP_GROUP_HASH;
		static GameNative<int(Hash group1, Hash group2), 0x9E6B70061662AE5C> GET_RELATIONSHIP_BETWEEN_GROUPS;
		static GameNative<void(Ped ped, BOOL toggle), 0x4328652AE5769C71> SET_PED_CAN_BE_TARGETED_WITHOUT_LOS;
		static GameNative<void(Ped ped, float radius, int maxFriends), 0x112942C6E708F70B> SET_PED_TO_INFORM_RESPECTED_FRIENDS;
		static GameNative<BOOL(Ped ped, Any event), 0x625B774D75C87068> IS_PED_RESPONDING_TO_EVENT;
		static GameNative<void(Ped ped, Hash patternHash), 0x9AC577F5A12AD8A9> SET_PED_FIRING_PATTERN;
		static GameNative<void(Ped ped, int shootRate), 0x614DA022990752DC> SET_PED_SHOOT_RATE;
		static GameNative<void(Ped ped, int combatType, float p2), 0xFF41B4B141ED981C> SET_COMBAT_FLOAT;
		static GameNative<float(Ped ped, int p1), 0x52DFF8A10508090A> GET_COMBAT_FLOAT;
		static GameNative<void(int groupID, Any* unknown, int* sizeInMembers), 0x8DE69FE35CA09A45> GET_GROUP_SIZE;
		static GameNative<BOOL(int groupId), 0x7C6B0C22F9F40BBE> DOES_GROUP_EXIST;
		static GameNative<int(Ped ped), 0xF162E133B4E7A675> GET_PED_GROUP_INDEX;
		static GameNative<BOOL(Ped ped), 0x5891CAC5D4ACFF74> IS_PED_IN_GROUP;
		static GameNative<Player(Ped ped), 0x6A3975DEA89F9A17> GET_PLAYER_PED_IS_FOLLOWING;
		static GameNative<void(int groupId, int formationType), 0xCE2F5FC3AF7E8C1E> SET_GROUP_FORMATION;
		static GameNative<void(int groupId, float p1, float p2, float p3), 0x1D9D45004C28C916> SET_GROUP_FORMATION_SPACING;
		static GameNative<void(int groupId), 0x63DAB4CCB3273205> RESET_GROUP_FORMATION_DEFAULT_SPACING;
		static GameNative<Vehicle(Ped ped), 0x6094AD011A2EA87D> GET_VEHICLE_PED_IS_USING;
		static GameNative<Vehicle(Ped ped), 0xF92691AED837A5FC> SET_EXCLUSIVE_PHONE_RELATIONSHIPS;
		static GameNative<void(Ped ped, BOOL toggle), 0x9FF447B6B6AD960A> SET_PED_GRAVITY;
		static GameNative<void(Ped ped, int damageAmount, BOOL armorFirst), 0x697157CED63F18D4> APPLY_DAMAGE_TO_PED;
		static GameNative<Any(Ped ped, Any p1), 0x36B77BB84687C318> _0x36B77BB84687C318;
		static GameNative<void(Ped ped, BOOL toggle), 0xDA1F1B7BE1A8766F> SET_PED_ALLOWED_TO_DUCK;
		static GameNative<void(Ped ped, BOOL toggle), 0x3DBFC55D5C9BB447> SET_PED_NEVER_LEAVES_GROUP;
		static GameNative<int(Ped ped), 0xFF059E1E4C01E63C> GET_PED_TYPE;
		static GameNative<void(Ped ped, BOOL toggle), 0xBB03C38DD3FB7FFD> SET_PED_AS_COP;
		static GameNative<void(Ped ped, int value), 0xF5F6378C4F3419D3> SET_PED_MAX_HEALTH;
		static GameNative<int(Ped ped), 0x4700A416E8324EF3> GET_PED_MAX_HEALTH;
		static GameNative<void(Ped ped, float value), 0x43C851690662113D> SET_PED_MAX_TIME_IN_WATER;
		static GameNative<void(Ped ped, float value), 0x6BA428C528D9E522> SET_PED_MAX_TIME_UNDERWATER;
		static GameNative<void(Ped ped, float p1), 0x2735233A786B1BEF> _0x2735233A786B1BEF;
		static GameNative<void(Any p0, Any p1, Any p2, Any p3), 0x952F06BEECD775CC> _0x952F06BEECD775CC;
		static GameNative<void(Any p0), 0xE6CA85E7259CE16B> _0xE6CA85E7259CE16B;
		static GameNative<void(Ped ped, int state), 0x7A6535691B477C48> SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE;
		static GameNative<BOOL(Ped ped), 0x51AC07A44D4F5B8A> CAN_KNOCK_PED_OFF_VEHICLE;
		static GameNative<void(Ped ped), 0x45BBCBA77C29A841> KNOCK_PED_OFF_VEHICLE;
		static GameNative<void(Ped ped, float posX, float posY, float posZ), 0x87052FE446E07247> SET_PED_COORDS_NO_GANG;
		static GameNative<Ped(int groupID, int memberNumber), 0x51455483CF23ED97> GET_PED_AS_GROUP_MEMBER;
		static GameNative<Ped(int groupID), 0x5CCE68DBD5FE93EC> _GET_PED_AS_GROUP_LEADER;
		static GameNative<void(Ped ped, BOOL toggle), 0x971D38760FBC02EF> SET_PED_KEEP_TASK;
		static GameNative<void(Ped ped, BOOL p1), 0x49E50BDB8BA4DAB2> _0x49E50BDB8BA4DAB2;
		static GameNative<BOOL(Ped ped), 0x9DE327631295B4C2> IS_PED_SWIMMING;
		static GameNative<BOOL(Ped ped), 0xC024869A53992F34> IS_PED_SWIMMING_UNDER_WATER;
		static GameNative<void(Ped ped, float posX, float posY, float posZ), 0x9AFEFF481A85AB2E> SET_PED_COORDS_KEEP_VEHICLE;
		static GameNative<void(Ped ped, BOOL toggle), 0x2A30922C90C9B42C> SET_PED_DIES_IN_VEHICLE;
		static GameNative<void(BOOL toggle), 0x102E68B2024D536D> SET_CREATE_RANDOM_COPS;
		static GameNative<void(BOOL toggle), 0x8A4986851C4EF6E7> SET_CREATE_RANDOM_COPS_NOT_ON_SCENARIOS;
		static GameNative<void(BOOL toggle), 0x444CB7D7DBE6973D> SET_CREATE_RANDOM_COPS_ON_SCENARIOS;
		static GameNative<BOOL(), 0x5EE2CAFF7F17770D> CAN_CREATE_RANDOM_COPS;
		static GameNative<void(Ped ped, BOOL toggle), 0x02A0C9720B854BFA> SET_PED_AS_ENEMY;
		static GameNative<void(Ped ped, BOOL p1, BOOL p2), 0x1CCE141467FF42A2> SET_PED_CAN_SMASH_GLASS;
		static GameNative<BOOL(Ped ped), 0x6F972C1AB75A1ED0> IS_PED_IN_ANY_TRAIN;
		static GameNative<BOOL(Ped ped), 0xBB062B2B5722478E> IS_PED_GETTING_INTO_A_VEHICLE;
		static GameNative<BOOL(Ped ped), 0x44D28D5DDFE5F68C> IS_PED_TRYING_TO_ENTER_A_LOCKED_VEHICLE;
		static GameNative<void(Ped ped, BOOL toggle), 0xDF1AF8B5D56542FA> SET_ENABLE_HANDCUFFS;
		static GameNative<void(Ped ped, BOOL toggle), 0xC52E0F855C58FC2E> SET_ENABLE_BOUND_ANKLES;
		static GameNative<void(Ped ped, BOOL toggle), 0xF99F62004024D506> SET_ENABLE_SCUBA;
		static GameNative<void(Ped ped, BOOL toggle, BOOL p2), 0xB3B1CB349FF9C75D> SET_CAN_ATTACK_FRIENDLY;
		static GameNative<int(Ped ped), 0xF6AA118530443FD2> GET_PED_ALERTNESS;
		static GameNative<void(Ped ped, int value), 0xDBA71115ED9941A6> SET_PED_ALERTNESS;
		static GameNative<void(Ped ped, BOOL toggle), 0xBC0ED94165A48BC2> SET_PED_GET_OUT_UPSIDE_DOWN_VEHICLE;
		static GameNative<void(Player* player, char* clipSet, float blendTime), 0xAF8A94EDE7712BEF> SET_PED_MOVEMENT_CLIPSET;
		static GameNative<void(Ped ped, float p1), 0xAA74EC0CB0AAEA2C> RESET_PED_MOVEMENT_CLIPSET;
		static GameNative<void(Ped ped, char* clipSet), 0x29A28F3F8CF6D854> SET_PED_STRAFE_CLIPSET;
		static GameNative<void(Ped ped), 0x20510814175EA477> RESET_PED_STRAFE_CLIPSET;
		static GameNative<void(Ped ped, char* clipSet), 0x2622E35B77D3ACA2> SET_PED_WEAPON_MOVEMENT_CLIPSET;
		static GameNative<void(Ped ped), 0x97B0DB5B4AA74E77> RESET_PED_WEAPON_MOVEMENT_CLIPSET;
		static GameNative<void(Ped ped, char* clipset), 0xED34AB6C5CB36520> SET_PED_DRIVE_BY_CLIPSET_OVERRIDE;
		static GameNative<void(Ped ped), 0x4AFE3690D7E0B5AC> CLEAR_PED_DRIVE_BY_CLIPSET_OVERRIDE;
		static GameNative<void(Ped ped, char* clipset), 0x9DBA107B4937F809> _SET_PED_COVER_CLIPSET_OVERRIDE;
		static GameNative<void(Ped ped), 0xC79196DCB36F6121> _CLEAR_PED_COVER_CLIPSET_OVERRIDE;
		static GameNative<void(Any p0), 0x80054D7FCC70EEC6> _0x80054D7FCC70EEC6;
		static GameNative<void(Ped ped, Hash context), 0x530071295899A8C6> SET_PED_IN_VEHICLE_CONTEXT;
		static GameNative<void(Ped ped), 0x22EF8FF8778030EB> RESET_PED_IN_VEHICLE_CONTEXT;
		static GameNative<BOOL(Ped ped, char* animDict, char* anim), 0x6EC47A344923E1ED> IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM;
		static GameNative<void(Ped ped, char* animDict, char* animName, float p3, BOOL p4), 0x6C60394CB4F75E9A> SET_PED_ALTERNATE_WALK_ANIM;
		static GameNative<void(Ped ped, float p1), 0x8844BBFCE30AA9E9> CLEAR_PED_ALTERNATE_WALK_ANIM;
		static GameNative<void(Ped ped, int stance, char* animDictionary, char* animationName, float p4, BOOL p5), 0x90A43CC281FFAB46> SET_PED_ALTERNATE_MOVEMENT_ANIM;
		static GameNative<void(Ped ped, int stance, float p2), 0xD8D19675ED5FBDCE> CLEAR_PED_ALTERNATE_MOVEMENT_ANIM;
		static GameNative<void(Ped ped, char* animGroupGesture), 0xDDF803377F94AAA8> SET_PED_GESTURE_GROUP;
		static GameNative<Vector3(char* animDict, char* animName, float x, float y, float z, float xRot, float yRot, float zRot, float p8, int p9), 0xBE22B26DD764C040> GET_ANIM_INITIAL_OFFSET_POSITION;
		static GameNative<Vector3(char* animDict, char* animName, float x, float y, float z, float xRot, float yRot, float zRot, float p8, int p9), 0x4B805E6046EE9E47> GET_ANIM_INITIAL_OFFSET_ROTATION;
		static GameNative<int(Ped ped, int componentId), 0x67F3780DD425D4FC> GET_PED_DRAWABLE_VARIATION;
		static GameNative<int(Ped SC, int sc), 0x27561561732A7842> GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS;
		static GameNative<int(Ped ped, int componentId), 0x04A355E041E004E6> GET_PED_TEXTURE_VARIATION;
		static GameNative<int(Ped mp_f_freemode_01, int Te, int DrawableID), 0x8F7156A3142A6BAD> GET_NUMBER_OF_PED_TEXTURE_VARIATIONS;
		static GameNative<int(Ped ped, int propId), 0x5FAF9754E789FB47> GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS;
		static GameNative<int(Ped ped, int propId, int drawableId), 0xA6E7F1CEB523E171> GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS;
		static GameNative<int(Ped ped, int componentId), 0xE3DD5F2A84B42281> GET_PED_PALETTE_VARIATION;
		static GameNative<BOOL(Any* p0, Any* p1), 0x9E30E91FB03A2CAF> _0x9E30E91FB03A2CAF;
		static GameNative<Any(Any p0), 0x1E77FA7A62EE6C4C> _0x1E77FA7A62EE6C4C;
		static GameNative<Any(Any p0), 0xF033419D1B81FAE8> _0xF033419D1B81FAE8;
		static GameNative<BOOL(Ped ped, int componentId, int drawableId, int textureId), 0xE825F6B6CEA7671D> IS_PED_COMPONENT_VARIATION_VALID;
		static GameNative<void(Ped ped, int componentId, int drawableId, int textureId, int paletteId), 0x262B14F48D29DE80> SET_PED_COMPONENT_VARIATION;
		static GameNative<void(Ped ped, BOOL p1), 0xC8A9481A01E63C28> SET_PED_RANDOM_COMPONENT_VARIATION;
		static GameNative<void(Ped ped), 0xC44AA05345C992C6> SET_PED_RANDOM_PROPS;
		static GameNative<void(Ped ped), 0x45EEE61580806D63> SET_PED_DEFAULT_COMPONENT_VARIATION;
		static GameNative<void(Ped ped, Ped father, Ped mother, float fathersSide, float mothersSide), 0x137BBD05230DB22D> SET_PED_BLEND_FROM_PARENTS;
		static GameNative<void(Ped ped, int shapeFirstID, int shapeSecondID, int shapeThirdID, int skinFirstID, int skinSecondID, int skinThirdID, float shapeMix, float skinMix, float thirdMix, BOOL isParent), 0x9414E18B9434C2FE> SET_PED_HEAD_BLEND_DATA;
		static GameNative<BOOL(Ped ped, Any* headBlendData), 0x2746BD9D88C5C5D0> _GET_PED_HEAD_BLEND_DATA;
		static GameNative<void(Ped ped, float shapeMix, float skinMix, float thirdMix), 0x723538F61C647C5A> UPDATE_PED_HEAD_BLEND_DATA;
		static GameNative<void(Ped ped, int index), 0x50B56988B170AFDF> _SET_PED_EYE_COLOR;
		static GameNative<void(Ped ped, int overlayID, int index, float opacity), 0x48F44967FA05CC1E> SET_PED_HEAD_OVERLAY;
		static GameNative<int(Ped ped, int overlayID), 0xA60EF3B6461A4D43> _GET_PED_HEAD_OVERLAY_VALUE;
		static GameNative<int(int overlayID), 0xCF1CE768BB43480E> _GET_NUM_HEAD_OVERLAY_VALUES;
		static GameNative<void(Ped ped, int overlayID, int colorType, int colorID, int secondColorID), 0x497BF74A7B9CB952> _SET_PED_HEAD_OVERLAY_COLOR;
		static GameNative<void(Ped ped, int colorID, int highlightColorID), 0x4CFFC65454C93A49> _SET_PED_HAIR_COLOR;
		static GameNative<int(), 0xE5C0CF872C2AD150> _GET_NUM_HAIR_COLORS;
		static GameNative<int(), 0xD1F7CA1535D22818> _GET_NUM_MAKEUP_COLORS;
		static GameNative<void(int colorID, int* R, int* G, int* B), 0x4852FC386E2E1BB5> _GET_HAIR_COLOR;
		static GameNative<void(int colorID, int* R, int* G, Any* B), 0x013E5CFC38CD5387> _GET_LIPSTICK_COLOR;
		static GameNative<BOOL(int ColorID), 0xED6D8E27A43B8CDE> _0xED6D8E27A43B8CDE;
		static GameNative<int(Any p0), 0xEA9960D07DADCF10> _0xEA9960D07DADCF10;
		static GameNative<BOOL(Any p0), 0x3E802F11FBE27674> _0x3E802F11FBE27674;
		static GameNative<BOOL(Any p0), 0xF41B5D290C99A3D6> _0xF41B5D290C99A3D6;
		static GameNative<BOOL(int colorID), 0xE0D36E5D9E99CC21> _IS_PED_HAIR_COLOR_VALID;
		static GameNative<Any(Any p0), 0xAAA6A3698A69E048> _0xAAA6A3698A69E048;
		static GameNative<BOOL(int colorID), 0x0525A2C2562F3CD4> _IS_PED_LIPSTICK_COLOR_VALID;
		static GameNative<BOOL(int colorID), 0x604E810189EE3A59> _IS_PED_BLUSH_COLOR_VALID;
		static GameNative<Any(Hash modelHash, Any p1, Any p2), 0xC56FBF2F228E1DAC> _0xC56FBF2F228E1DAC;
		static GameNative<void(Ped ped, int index, float scale), 0x71A5C1DBA060049E> _SET_PED_FACE_FEATURE;
		static GameNative<BOOL(Ped ped), 0x654CD0A825161131> HAS_PED_HEAD_BLEND_FINISHED;
		static GameNative<void(Ped ped), 0x4668D80430D6C299> _0x4668D80430D6C299;
		static GameNative<void(Ped ped, int r, int g, int b, int p4), 0xCC9682B8951C5229> _0xCC9682B8951C5229;
		static GameNative<void(Ped ped), 0xA21C118553BBDF02> _0xA21C118553BBDF02;
		static GameNative<int(int type), 0x68D353AB88B97E0C> _GET_FIRST_PARENT_ID_FOR_PED_TYPE;
		static GameNative<int(int type), 0x5EF37013A6539C9D> _GET_NUM_PARENT_PEDS_OF_TYPE;
		static GameNative<Any(Ped ped, int slot, int drawableId, int textureId), 0x39D55A620FCB6A3A> _0x39D55A620FCB6A3A;
		static GameNative<BOOL(Ped p0), 0x66680A92700F43DF> _0x66680A92700F43DF;
		static GameNative<void(Any p0), 0x5AAB586FFEC0FD96> _0x5AAB586FFEC0FD96;
		static GameNative<BOOL(Ped ped, int componentId, int drawableId, int TextureId), 0x2B16A3BFF1FBCE49> _IS_PED_PROP_VALID;
		static GameNative<BOOL(Ped ped), 0x784002A632822099> _0x784002A632822099;
		static GameNative<void(Ped ped), 0xF79F9DEF0AADE61A> _0xF79F9DEF0AADE61A;
		static GameNative<int(Ped ped, int componentId), 0x898CC20EA75BACD8> GET_PED_PROP_INDEX;
		static GameNative<void(Ped ped, int componentId, int drawableId, int TextureId, BOOL isNetworkGame), 0x93376B65A266EB5F> SET_PED_PROP_INDEX;
		static GameNative<void(Ped ped, BOOL p1, BOOL knockOff, BOOL p2, BOOL p3), 0x6FD7816A36615F48> KNOCK_OFF_PED_PROP;
		static GameNative<void(Ped ped, int propId), 0x0943E5B8E078E76E> CLEAR_PED_PROP;
		static GameNative<void(Ped ped), 0xCD8A7537A9B52F06> CLEAR_ALL_PED_PROPS;
		static GameNative<void(Ped ped), 0xAFF4710E2A0A6C12> _0xAFF4710E2A0A6C12;
		static GameNative<int(Ped ped, int componentId), 0xE131A28626F81AB2> GET_PED_PROP_TEXTURE_INDEX;
		static GameNative<void(Any p0), 0x1280804F7CFD2D6C> _0x1280804F7CFD2D6C;
		static GameNative<void(Any p0), 0x36C6984C3ED0C911> _0x36C6984C3ED0C911;
		static GameNative<void(Any p0), 0xB50EB4CCB29704AC> _0xB50EB4CCB29704AC;
		static GameNative<BOOL(Any p0), 0xFEC9A3B1820F3331> _0xFEC9A3B1820F3331;
		static GameNative<void(Ped ped, BOOL toggle), 0x9F8AA94D6D97DBF4> SET_BLOCKING_OF_NON_TEMPORARY_EVENTS;
		static GameNative<void(Ped ped, float p1, float p2, float p3, float p4, float p5), 0x4F5F651ACCC9C4CF> SET_PED_BOUNDS_ORIENTATION;
		static GameNative<void(Ped ped, Ped target), 0x2F25D9AEFA34FBA2> REGISTER_TARGET;
		static GameNative<void(Ped ped, float radius), 0x9222F300BF8354FE> REGISTER_HATED_TARGETS_AROUND_PED;
		static GameNative<Ped(float x, float y, float z, float xRadius, float yRadius, float zRadius, int pedType), 0x876046A8E3A4B71C> GET_RANDOM_PED_AT_COORD;
		static GameNative<BOOL(float x, float y, float z, float radius, BOOL p4, BOOL p5, Ped* outPed, BOOL p7, BOOL p8, int pedType), 0xC33AB876A77F8164> GET_CLOSEST_PED;
		static GameNative<void(BOOL value), 0x14F19A8782C8071E> SET_SCENARIO_PEDS_TO_BE_RETURNED_BY_NEXT_COMMAND;
		static GameNative<BOOL(Ped ped, BOOL p1, BOOL p2, BOOL p3, BOOL p4, BOOL p5, BOOL p6, BOOL p7, Any p8), 0x03EA03AF85A85CB7> _0x03EA03AF85A85CB7;
		static GameNative<void(Ped driver, float racingModifier), 0xDED5AF5A0EA4B297> SET_DRIVER_RACING_MODIFIER;
		static GameNative<void(Ped driver, float ability), 0xB195FFA8042FC5C3> SET_DRIVER_ABILITY;
		static GameNative<void(Ped driver, float aggressiveness), 0xA731F608CA104E3C> SET_DRIVER_AGGRESSIVENESS;
		static GameNative<BOOL(Ped ped), 0x128F79EDCECE4FD5> CAN_PED_RAGDOLL;
		static GameNative<BOOL(Ped ped, int time1, int time2, int ragdollType, BOOL p4, BOOL p5, BOOL p6), 0xAE99FB955581844A> SET_PED_TO_RAGDOLL;
		static GameNative<BOOL(Ped ped, int time, int p2, int ragdollType, float x, float y, float z, float p7, float p8, float p9, float p10, float p11, float p12, float p13), 0xD76632D99E4966C8> SET_PED_TO_RAGDOLL_WITH_FALL;
		static GameNative<void(Ped ped, BOOL toggle), 0xF0A4F1BBF4FA7497> SET_PED_RAGDOLL_ON_COLLISION;
		static GameNative<BOOL(Ped ped), 0x47E4E977581C5B55> IS_PED_RAGDOLL;
		static GameNative<BOOL(Ped ped), 0xE3B6097CC25AA69E> IS_PED_RUNNING_RAGDOLL_TASK;
		static GameNative<void(Ped ped), 0x01F6594B923B9251> SET_PED_RAGDOLL_FORCE_FALL;
		static GameNative<void(Ped ped), 0x9FA4664CF62E47E8> RESET_PED_RAGDOLL_TIMER;
		static GameNative<void(Ped ped, BOOL toggle), 0xB128377056A54E2A> SET_PED_CAN_RAGDOLL;
		static GameNative<BOOL(Ped ped), 0xD1871251F3B5ACD7> _0xD1871251F3B5ACD7;
		static GameNative<BOOL(Ped ped), 0x2AFE52F782F25775> IS_PED_RUNNING_MOBILE_PHONE_TASK;
		static GameNative<BOOL(Ped ped), 0xA3F3564A5B3646C0> _0xA3F3564A5B3646C0;
		static GameNative<void(Ped ped, int flags), 0x26695EC767728D84> _SET_PED_RAGDOLL_BLOCKING_FLAGS;
		static GameNative<void(Ped ped, int flags), 0xD86D101FCFD00A4B> _RESET_PED_RAGDOLL_BLOCKING_FLAGS;
		static GameNative<void(Ped ped, float p1, float p2, float p3, float p4, float p5, float p6, float p7, BOOL p8, BOOL p9), 0xC7F76DF27A5045A1> SET_PED_ANGLED_DEFENSIVE_AREA;
		static GameNative<void(Ped ped, float x, float y, float z, float radius, BOOL p5, BOOL p6), 0x9D3151A373974804> SET_PED_SPHERE_DEFENSIVE_AREA;
		static GameNative<void(Ped ped, Ped target, float xOffset, float yOffset, float zOffset, float radius, BOOL p6), 0xF9B8F91AAD3B953E> SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_PED;
		static GameNative<void(Ped ped, Any p1, float p2, float p3, float p4, float p5, BOOL p6), 0xE4723DB6E736CCFF> _0xE4723DB6E736CCFF;
		static GameNative<void(Ped ped, Ped attachPed, float p2, float p3, float p4, float p5, float p6, float p7, float p8, BOOL p9, BOOL p10), 0x4EF47FE21698A8B6> SET_PED_DEFENSIVE_AREA_ATTACHED_TO_PED;
		static GameNative<void(Ped ped, float p1, float p2, float p3, BOOL p4), 0x413C6C763A4AFFAD> SET_PED_DEFENSIVE_AREA_DIRECTION;
		static GameNative<void(Ped ped, BOOL toggle), 0x74D4E028107450A9> REMOVE_PED_DEFENSIVE_AREA;
		static GameNative<Vector3(Ped ped, BOOL p1), 0x3C06B8786DD94CD1> GET_PED_DEFENSIVE_AREA_POSITION;
		static GameNative<BOOL(Ped ped, BOOL p1), 0xBA63D9FE45412247> _0xBA63D9FE45412247;
		static GameNative<void(Ped ped, Any itemSet), 0x8421EB4DA7E391B9> SET_PED_PREFERRED_COVER_SET;
		static GameNative<void(Ped ped), 0xFDDB234CF74073D9> REMOVE_PED_PREFERRED_COVER_SET;
		static GameNative<void(Ped ped), 0x8D8ACD8388CD99CE> REVIVE_INJURED_PED;
		static GameNative<void(Ped ped), 0x71BC8E838B9C6035> RESURRECT_PED;
		static GameNative<void(Ped ped, char* name), 0x98EFA132A4117BE1> SET_PED_NAME_DEBUG;
		static GameNative<Vector3(Ped ped, BOOL worldSpace), 0xE0AF41401ADF87E3> GET_PED_EXTRACTED_DISPLACEMENT;
		static GameNative<void(Ped ped, BOOL toggle), 0x5BA7919BED300023> SET_PED_DIES_WHEN_INJURED;
		static GameNative<void(Ped ped, BOOL toggle), 0x97A790315D3831FD> SET_PED_ENABLE_WEAPON_BLOCKING;
		static GameNative<void(Ped ped, BOOL p1), 0xF9ACF4A08098EA25> _0xF9ACF4A08098EA25;
		static GameNative<void(Ped ped), 0x3AC1F7B898F30C05> RESET_PED_VISIBLE_DAMAGE;
		static GameNative<void(Ped ped, Any p1, float p2, float p3, Any p4), 0x816F6981C60BF53B> APPLY_PED_BLOOD_DAMAGE_BY_ZONE;
		static GameNative<void(Ped ped, int boneIndex, float xRot, float yRot, float zRot, char* woundType), 0x83F7E01C7B769A26> APPLY_PED_BLOOD;
		static GameNative<void(Ped ped, Any p1, float p2, float p3, Any* p4), 0x3311E47B91EDCBBC> APPLY_PED_BLOOD_BY_ZONE;
		static GameNative<void(Ped ped, Any p1, float xOffset, float yOffset, float zOffset, float scale, Any p6, float p7, char* bloodType), 0xEF0D582CBF2D9B0F> APPLY_PED_BLOOD_SPECIFIC;
		static GameNative<void(Ped ped, int p1, float p2, float p3, float p4, float p5, float p6, int p7, BOOL p8, char* p9), 0x397C38AA7B4A5F83> APPLY_PED_DAMAGE_DECAL;
		static GameNative<void(Ped ped, char* damagePack, float damage, float mult), 0x46DF918788CB093F> APPLY_PED_DAMAGE_PACK;
		static GameNative<void(Ped ped), 0x8FE22675A5A45817> CLEAR_PED_BLOOD_DAMAGE;
		static GameNative<void(Ped ped, int p1), 0x56E3B78C5408D9F4> CLEAR_PED_BLOOD_DAMAGE_BY_ZONE;
		static GameNative<void(Ped ped, Any p1, BOOL p2), 0x62AB793144DE75DC> HIDE_PED_BLOOD_DAMAGE_BY_ZONE;
		static GameNative<void(Ped ped, int p1, char* p2), 0x523C79AEEFCC4A2A> CLEAR_PED_DAMAGE_DECAL_BY_ZONE;
		static GameNative<BOOL(Ped ped), 0x71EAB450D86954A1> GET_PED_DECORATIONS_STATE;
		static GameNative<void(Ped ped, BOOL p1), 0x2B694AFCF64E6994> _0x2B694AFCF64E6994;
		static GameNative<void(Ped ped), 0x9C720776DAA43E7E> CLEAR_PED_WETNESS;
		static GameNative<void(Ped ped, float height), 0x44CB6447D2571AA0> SET_PED_WETNESS_HEIGHT;
		static GameNative<void(Ped ped), 0xB5485E4907B53019> SET_PED_WETNESS_ENABLED_THIS_FRAME;
		static GameNative<void(Ped ped), 0x6585D955A68452A5> _0x6585D955A68452A5;
		static GameNative<void(Ped ped, float sweat), 0x27B0405F59637D1F> SET_PED_SWEAT;
		static GameNative<void(Ped ped, Hash collection, Hash overlay), 0x5F5D1665E352A839> _SET_PED_DECORATION;
		static GameNative<void(Ped ped, Hash collection, Hash overlay), 0x5619BFA07CFD7833> _SET_PED_FACIAL_DECORATION;
		static GameNative<int(Hash collection, Hash overlay), 0x9FD452BFBE7A7A8B> _GET_TATTOO_ZONE;
		static GameNative<void(Ped ped), 0x0E5173C163976E38> CLEAR_PED_DECORATIONS;
		static GameNative<void(Ped ped), 0xE3B27E70CEAB9F0C> _CLEAR_PED_FACIAL_DECORATIONS;
		static GameNative<BOOL(Ped ped), 0x11B499C1E0FF8559> WAS_PED_SKELETON_UPDATED;
		static GameNative<Vector3(Ped ped, int boneId, float offsetX, float offsetY, float offsetZ), 0x17C07FC640E86B4E> GET_PED_BONE_COORDS;
		static GameNative<void(BOOL startImmediately, int messageId), 0x418EF2A1BCE56685> CREATE_NM_MESSAGE;
		static GameNative<void(Ped ped), 0xB158DFCCC56E5C5B> GIVE_PED_NM_MESSAGE;
		static GameNative<int(float x1, float y1, float z1, float x2, float y2, float z2, BOOL p6, BOOL p7, BOOL p8, BOOL p9), 0x1B5C85C612E5256E> ADD_SCENARIO_BLOCKING_AREA;
		static GameNative<void(), 0xD37401D78A929A49> REMOVE_SCENARIO_BLOCKING_AREAS;
		static GameNative<void(int areaHandle, BOOL p1), 0x31D16B74C6E29D66> REMOVE_SCENARIO_BLOCKING_AREA;
		static GameNative<void(float x, float y, float z, float range, int p4), 0x28157D43CF600981> SET_SCENARIO_PEDS_SPAWN_IN_SPHERE_AREA;
		static GameNative<BOOL(Ped ped, char* scenario), 0x1BF094736DD62C2E> IS_PED_USING_SCENARIO;
		static GameNative<BOOL(Ped ped), 0x57AB4A3080F85143> IS_PED_USING_ANY_SCENARIO;
		static GameNative<Any(Any p0, Any p1, Any p2, Any p3), 0xFE07FF6495D52E2A> _0xFE07FF6495D52E2A;
		static GameNative<void(Any p0, BOOL p1), 0x9A77DFD295E29B09> _0x9A77DFD295E29B09;
		static GameNative<Any(Any p0, Any p1, Any p2, Any p3), 0x25361A96E0F7E419> _0x25361A96E0F7E419;
		static GameNative<Any(Any p0, Any p1, Any p2, Any p3), 0xEC6935EBE0847B90> _0xEC6935EBE0847B90;
		static GameNative<void(Any p0), 0xA3A9299C4F2ADB98> _0xA3A9299C4F2ADB98;
		static GameNative<void(Any p0), 0xF1C03A5352243A30> _0xF1C03A5352243A30;
		static GameNative<Any(Any p0, Any p1, Any p2, Any p3), 0xEEED8FAFEC331A70> _0xEEED8FAFEC331A70;
		static GameNative<void(Ped ped, BOOL p1), 0x425AECF167663F48> _0x425AECF167663F48;
		static GameNative<void(Any p0, BOOL p1), 0x5B6010B3CBC29095> _0x5B6010B3CBC29095;
		static GameNative<void(Any p0, BOOL p1), 0xCEDA60A74219D064> _0xCEDA60A74219D064;
		static GameNative<void(Ped ped, char* animName, char* animDict), 0xE1E65CA8AC9C00ED> PLAY_FACIAL_ANIM;
		static GameNative<void(Ped ped, char* animName, char* animDict), 0xFFC24B988B938B38> SET_FACIAL_IDLE_ANIM_OVERRIDE;
		static GameNative<void(Ped ped), 0x726256CC1EEB182F> CLEAR_FACIAL_IDLE_ANIM_OVERRIDE;
		static GameNative<void(Ped ped, BOOL toggle), 0xBAF20C5432058024> SET_PED_CAN_PLAY_GESTURE_ANIMS;
		static GameNative<void(Ped ped, BOOL toggle, BOOL p2), 0xF833DDBA3B104D43> SET_PED_CAN_PLAY_VISEME_ANIMS;
		static GameNative<void(Ped ped, BOOL p1), 0x33A60D8BDD6E508C> _SET_PED_CAN_PLAY_INJURED_ANIMS;
		static GameNative<void(Ped ped, BOOL toggle), 0x6373D1349925A70E> SET_PED_CAN_PLAY_AMBIENT_ANIMS;
		static GameNative<void(Ped ped, BOOL toggle), 0x0EB0585D15254740> SET_PED_CAN_PLAY_AMBIENT_BASE_ANIMS;
		static GameNative<void(Ped ped), 0xC2EE020F5FB4DB53> _0xC2EE020F5FB4DB53;
		static GameNative<void(Ped ped, BOOL toggle), 0x6C3B4D6D13B4C841> SET_PED_CAN_ARM_IK;
		static GameNative<void(Ped ped, BOOL toggle), 0xC11C18092C5530DC> SET_PED_CAN_HEAD_IK;
		static GameNative<void(Ped ped, BOOL toggle), 0x73518ECE2485412B> SET_PED_CAN_LEG_IK;
		static GameNative<void(Ped ped, BOOL toggle), 0xF2B7106D37947CE0> SET_PED_CAN_TORSO_IK;
		static GameNative<void(Ped ped, BOOL p1), 0xF5846EDB26A98A24> _0xF5846EDB26A98A24;
		static GameNative<void(Ped ped, BOOL p1), 0x6647C5F6F5792496> _0x6647C5F6F5792496;
		static GameNative<void(Ped ped, BOOL toggle), 0xEC4686EC06434678> SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT;
		static GameNative<BOOL(Ped ped1, Ped ped2), 0x5CD3CB88A7F8850D> IS_PED_HEADTRACKING_PED;
		static GameNative<BOOL(Ped ped, Entity entity), 0x813A0A7C9D2E831F> IS_PED_HEADTRACKING_ENTITY;
		static GameNative<void(Ped ped, Ped lookAt), 0xCD17B554996A8D9E> SET_PED_PRIMARY_LOOKAT;
		static GameNative<void(Any p0, Any p1), 0x78C4E9961DB3EB5B> _0x78C4E9961DB3EB5B;
		static GameNative<void(Any p0, Any p1), 0x82A3D6D9CC2CB8E3> SET_PED_CLOTH_PRONE;
		static GameNative<void(Any p0, BOOL p1), 0xA660FAF550EB37E5> _0xA660FAF550EB37E5;
		static GameNative<void(Ped ped, int flagId, BOOL value), 0x1913FE4CBF41C463> SET_PED_CONFIG_FLAG;
		static GameNative<void(Ped ped, int flagId, BOOL value), 0xC1E8A365BF3B29F2> SET_PED_RESET_FLAG;
		static GameNative<BOOL(Ped ped, int flagId, BOOL p2), 0x7EE53118C892B513> GET_PED_CONFIG_FLAG;
		static GameNative<BOOL(Ped ped, int flagId), 0xAF9E59B1B1FBF2A0> GET_PED_RESET_FLAG;
		static GameNative<void(Ped ped, int index), 0x0BDDB8D9EC6BCF3C> SET_PED_GROUP_MEMBER_PASSENGER_INDEX;
		static GameNative<void(Ped ped, BOOL toggle), 0x6B7A646C242A7059> SET_PED_CAN_EVASIVE_DIVE;
		static GameNative<BOOL(Ped ped, Entity* evadingEntity), 0x414641C26E105898> IS_PED_EVASIVE_DIVING;
		static GameNative<void(Ped ped, float x, float y, float z, BOOL toggle), 0x96A05E4FB321B1BA> SET_PED_SHOOTS_AT_COORD;
		static GameNative<void(Ped ped, BOOL toggle), 0xE163A4BCE4DE6F11> SET_PED_MODEL_IS_SUPPRESSED;
		static GameNative<void(), 0xB47BD05FA66B40CF> STOP_ANY_PED_MODEL_BEING_SUPPRESSED;
		static GameNative<void(Ped ped, BOOL toggle), 0x638C03B0F9878F57> SET_PED_CAN_BE_TARGETED_WHEN_INJURED;
		static GameNative<void(Ped ped, BOOL toggle), 0x7FB17BA2E7DECA5B> SET_PED_GENERATES_DEAD_BODY_EVENTS;
		static GameNative<void(Ped ped, BOOL p1), 0xE43A13C9E4CCCBCF> _0xE43A13C9E4CCCBCF;
		static GameNative<void(Ped ped, BOOL toggle), 0xDF993EE5E90ABA25> SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT;
		static GameNative<void(Ped ped, BOOL cannotRemove, int helmetFlag, int textureIndex), 0x54C7C4A94367717E> GIVE_PED_HELMET;
		static GameNative<void(Ped ped, BOOL instantly), 0xA7B2458D0AD6DED8> REMOVE_PED_HELMET;
		static GameNative<BOOL(Ped ped), 0x14590DDBEDB1EC85> _0x14590DDBEDB1EC85;
		static GameNative<void(Ped ped, BOOL canWearHelmet), 0x560A43136EB58105> SET_PED_HELMET;
		static GameNative<void(Ped ped, int helmetFlag), 0xC0E78D5C2CE3EB25> SET_PED_HELMET_FLAG;
		static GameNative<void(Ped ped, int propIndex), 0x26D83693ED99291C> SET_PED_HELMET_PROP_INDEX;
		static GameNative<void(Ped ped, int textureIndex), 0xF1550C4BD22582E2> SET_PED_HELMET_TEXTURE_INDEX;
		static GameNative<BOOL(Ped ped), 0xF33BDFE19B309B19> IS_PED_WEARING_HELMET;
		static GameNative<void(Ped ped), 0x687C0B594907D2E8> _0x687C0B594907D2E8;
		static GameNative<BOOL(int p0), 0x451294E859ECC018> _0x451294E859ECC018;
		static GameNative<Any(Any p0), 0x9D728C1E12BF5518> _0x9D728C1E12BF5518;
		static GameNative<BOOL(Any p0), 0xF2385935BFFD4D92> _0xF2385935BFFD4D92;
		static GameNative<void(Ped ped, BOOL toggle), 0x332B562EEDA62399> SET_PED_TO_LOAD_COVER;
		static GameNative<void(Ped ped, BOOL toggle), 0xCB7553CDCEF4A735> SET_PED_CAN_COWER_IN_COVER;
		static GameNative<void(Ped player, BOOL aim), 0xC514825C507E3736> SET_PED_CAN_PEEK_IN_COVER;
		static GameNative<void(Ped ped, BOOL toggle), 0x94D94BF1A75AED3D> SET_PED_PLAYS_HEAD_ON_HORN_ANIM_WHEN_DIES_IN_VEHICLE;
		static GameNative<void(Ped ped, int mode), 0xC396F5B86FF9FEBD> SET_PED_LEG_IK_MODE;
		static GameNative<void(Ped ped, BOOL toggle), 0x0A986918B102B448> SET_PED_MOTION_BLUR;
		static GameNative<void(Ped ped, BOOL toggle), 0xED7F7EFE9FABF340> SET_PED_CAN_SWITCH_WEAPON;
		static GameNative<void(Ped ped, BOOL toggle), 0xEEB64139BA29A7CF> SET_PED_DIES_INSTANTLY_IN_WATER;
		static GameNative<void(Ped ped, int p1), 0x1A330D297AAC6BC1> _0x1A330D297AAC6BC1;
		static GameNative<void(Ped ped), 0xC158D28142A34608> STOP_PED_WEAPON_FIRING_WHEN_DROPPED;
		static GameNative<void(Ped ped, float p1), 0x5917BBA32D06C230> SET_SCRIPTED_ANIM_SEAT_OFFSET;
		static GameNative<void(Ped ped, int combatMovement), 0x4D9CA1009AFBD057> SET_PED_COMBAT_MOVEMENT;
		static GameNative<int(Ped ped), 0xDEA92412FCAEB3F5> GET_PED_COMBAT_MOVEMENT;
		static GameNative<void(Ped ped, int p1), 0xC7622C0D36B2FDA8> SET_PED_COMBAT_ABILITY;
		static GameNative<void(Ped ped, int p1), 0x3C606747B23E497B> SET_PED_COMBAT_RANGE;
		static GameNative<Any(Ped ped), 0xF9D9F7F2DB8E2FA0> GET_PED_COMBAT_RANGE;
		static GameNative<void(Ped ped, int attributeIndex, BOOL enabled), 0x9F7794730795E019> SET_PED_COMBAT_ATTRIBUTES;
		static GameNative<void(Ped ped, int responseType), 0x0703B9079823DA4A> SET_PED_TARGET_LOSS_RESPONSE;
		static GameNative<BOOL(Ped ped), 0xDCCA191DF9980FD7> _0xDCCA191DF9980FD7;
		static GameNative<BOOL(Ped ped), 0xFD4CCDBCC59941B7> IS_PED_PERFORMING_STEALTH_KILL;
		static GameNative<BOOL(Ped ped), 0xEBD0EDBA5BE957CF> _0xEBD0EDBA5BE957CF;
		static GameNative<BOOL(Ped ped), 0x863B23EFDE9C5DF2> IS_PED_BEING_STEALTH_KILLED;
		static GameNative<Ped(Ped ped), 0x18A3E9EE1297FD39> GET_MELEE_TARGET_FOR_PED;
		static GameNative<BOOL(Ped ped), 0xF9800AA1A771B000> WAS_PED_KILLED_BY_STEALTH;
		static GameNative<BOOL(Ped ped), 0x7F08E26039C7347C> WAS_PED_KILLED_BY_TAKEDOWN;
		static GameNative<BOOL(Ped ped), 0x61767F73EACEED21> _0x61767F73EACEED21;
		static GameNative<void(Ped ped, int attributes, BOOL p2), 0x70A2D1137C8ED7C9> SET_PED_FLEE_ATTRIBUTES;
		static GameNative<void(Ped ped, char* p1), 0xA549131166868ED3> SET_PED_COWER_HASH;
		static GameNative<void(Any p0, BOOL p1), 0x2016C603D6B8987C> _0x2016C603D6B8987C;
		static GameNative<void(Ped ped, BOOL toggle), 0x46F2193B3AD1D891> SET_PED_STEERS_AROUND_PEDS;
		static GameNative<void(Ped ped, BOOL toggle), 0x1509C089ADC208BF> SET_PED_STEERS_AROUND_OBJECTS;
		static GameNative<void(Ped ped, BOOL toggle), 0xEB6FB9D48DDE23EC> SET_PED_STEERS_AROUND_VEHICLES;
		static GameNative<void(Any p0, BOOL p1), 0xA9B61A329BFDCBEA> _0xA9B61A329BFDCBEA;
		static GameNative<void(Any p0), 0x570389D1C3DE3C6B> _0x570389D1C3DE3C6B;
		static GameNative<void(Any p0, BOOL p1), 0x576594E8D64375E2> _0x576594E8D64375E2;
		static GameNative<void(Any p0), 0xA52D5247A4227E14> _0xA52D5247A4227E14;
		static GameNative<BOOL(float x, float y, float z, float radius), 0x083961498679DC9F> IS_ANY_PED_NEAR_POINT;
		static GameNative<void(Ped ped, BOOL p1, BOOL p2), 0x2208438012482A1A> _0x2208438012482A1A;
		static GameNative<BOOL(Any p0, float p1, float p2, float p3, float p4), 0xFCF37A457CB96DC0> _0xFCF37A457CB96DC0;
		static GameNative<void(Ped ped), 0x7D7A2E43E74E2EB8> _TRACK_PED_VISIBILITY;
		static GameNative<void(Ped ped, BOOL p1), 0x2BC338A7B21F4608> GET_PED_FLOOD_INVINCIBILITY;
		static GameNative<void(Any p0, BOOL p1), 0xCD018C591F94CB43> _0xCD018C591F94CB43;
		static GameNative<void(Ped ped, BOOL p1), 0x75BA1CB3B7D40CAF> _0x75BA1CB3B7D40CAF;
		static GameNative<BOOL(Ped ped), 0x91C8E617F64188AC> IS_TRACKED_PED_VISIBLE;
		static GameNative<Any(Any p0), 0x511F1A683387C7E2> _0x511F1A683387C7E2;
		static GameNative<BOOL(Ped ped), 0x4C5E1F087CD10BB7> IS_PED_TRACKED;
		static GameNative<BOOL(Ped ped, Any p1), 0x8507BCB710FA6DC0> HAS_PED_RECEIVED_EVENT;
		static GameNative<BOOL(Ped ped1, Ped ped2), 0x6CD5A433374D4CFB> _CAN_PED_SEE_PED;
		static GameNative<BOOL(Ped p0, Any* p1), 0x9C6A6C19B6C0C496> _0x9C6A6C19B6C0C496;
		static GameNative<int(Ped ped, int boneId), 0x3F428D08BE5AAE31> GET_PED_BONE_INDEX;
		static GameNative<int(Ped ped, int bone), 0x2057EF813397A772> GET_PED_RAGDOLL_BONE_INDEX;
		static GameNative<void(Ped ped, float value), 0xBF29516833893561> SET_PED_ENVEFF_SCALE;
		static GameNative<float(Ped ped), 0x9C14D30395A51A3C> GET_PED_ENVEFF_SCALE;
		static GameNative<void(Ped ped, BOOL toggle), 0xD2C5AA0C0E8D0F1E> SET_ENABLE_PED_ENVEFF_SCALE;
		static GameNative<void(Ped ped, float p1), 0x110F526AB784111F> _0x110F526AB784111F;
		static GameNative<void(Ped ped, int p1, int p2, int p3), 0xD69411AA0CEBF9E9> _0xD69411AA0CEBF9E9;
		static GameNative<void(Any p0, Any p1), 0x1216E0BFA72CC703> _0x1216E0BFA72CC703;
		static GameNative<void(Ped ped, BOOL p1), 0x2B5AA717A181FB4C> _0x2B5AA717A181FB4C;
		static GameNative<BOOL(Ped ped), 0xB8B52E498014F5B0> _0xB8B52E498014F5B0;
		static GameNative<int(float posX, float posY, float posZ, float roll, float pitch, float yaw, int p6), 0x8C18E0F9080ADD73> CREATE_SYNCHRONIZED_SCENE;
		static GameNative<int(float x, float y, float z, float radius, Hash object), 0x62EC273D00187DCA> _CREATE_SYNCHRONIZED_SCENE_2;
		static GameNative<BOOL(int sceneId), 0x25D39B935A038A26> IS_SYNCHRONIZED_SCENE_RUNNING;
		static GameNative<void(int sceneID, float x, float y, float z, float roll, float pitch, float yaw, int unk), 0x6ACF6B7225801CD7> SET_SYNCHRONIZED_SCENE_ORIGIN;
		static GameNative<void(int sceneID, float phase), 0x734292F4F0ABF6D0> SET_SYNCHRONIZED_SCENE_PHASE;
		static GameNative<float(int sceneID), 0xE4A310B1D7FA73CC> GET_SYNCHRONIZED_SCENE_PHASE;
		static GameNative<void(int sceneID, float rate), 0xB6C49F8A5E295A5D> SET_SYNCHRONIZED_SCENE_RATE;
		static GameNative<float(int sceneID), 0xD80932D577274D40> GET_SYNCHRONIZED_SCENE_RATE;
		static GameNative<void(int sceneID, BOOL toggle), 0xD9A897A4C6C2974F> SET_SYNCHRONIZED_SCENE_LOOPED;
		static GameNative<BOOL(int sceneID), 0x62522002E0C391BA> IS_SYNCHRONIZED_SCENE_LOOPED;
		static GameNative<void(int sceneID, BOOL p1), 0x394B9CD12435C981> _SET_SYNCHRONIZED_SCENE_OCCLUSION_PORTAL;
		static GameNative<BOOL(int SceneID), 0x7F2F4F13AC5257EF> _0x7F2F4F13AC5257EF;
		static GameNative<void(int sceneID, Entity entity, int boneIndex), 0x272E4723B56A3B96> ATTACH_SYNCHRONIZED_SCENE_TO_ENTITY;
		static GameNative<void(int sceneID), 0x6D38F1F04CBB37EA> DETACH_SYNCHRONIZED_SCENE;
		static GameNative<void(int scene), 0xCD9CC7E200A52A6F> _DISPOSE_SYNCHRONIZED_SCENE;
		static GameNative<BOOL(Ped ped, Hash motionStateHash, BOOL p2, BOOL p3, BOOL p4), 0xF28965D04F570DCA> FORCE_PED_MOTION_STATE;
		static GameNative<BOOL(Ped ped, Any* p1, Any* p2), 0xF60165E1D2C5370B> _0xF60165E1D2C5370B;
		static GameNative<void(Ped ped, float value), 0x433083750C5E064A> SET_PED_MAX_MOVE_BLEND_RATIO;
		static GameNative<void(Ped ped, float value), 0x01A898D26E2333DD> SET_PED_MIN_MOVE_BLEND_RATIO;
		static GameNative<void(Ped ped, float value), 0x085BF80FA50A39D1> SET_PED_MOVE_RATE_OVERRIDE;
		static GameNative<BOOL(Ped ped, int flag), 0x46B05BCAE43856B0> _0x46B05BCAE43856B0;
		static GameNative<int(Ped ped, int* sizeAndVehs), 0xCFF869CBFA210D82> GET_PED_NEARBY_VEHICLES;
		static GameNative<int(Ped ped, int* sizeAndPeds, int ignore), 0x23F8F5FC7E8C4A6B> GET_PED_NEARBY_PEDS;
		static GameNative<BOOL(Ped ped), 0x7350823473013C02> _0x7350823473013C02;
		static GameNative<BOOL(Ped ped), 0x00E73468D085F745> IS_PED_USING_ACTION_MODE;
		static GameNative<void(Ped ped, BOOL p1, Any p2, char* action), 0xD75ACCF5E0FB5367> SET_PED_USING_ACTION_MODE;
		static GameNative<void(Ped ped, char* p1), 0x781DE8FA214E87D2> _0x781DE8FA214E87D2;
		static GameNative<void(Ped ped, float value), 0x364DF566EC833DE2> SET_PED_CAPSULE;
		static GameNative<int(Ped ped), 0x4462658788425076> REGISTER_PEDHEADSHOT;
		static GameNative<Any(Any p0), 0x953563CE563143AF> GET_QUADBIKE_DISPLAY_VARIATIONS;
		static GameNative<void(int handle), 0x96B1361D9B24C2FF> UNREGISTER_PEDHEADSHOT;
		static GameNative<BOOL(int handle), 0xA0A9668F158129A2> IS_PEDHEADSHOT_VALID;
		static GameNative<BOOL(int handle), 0x7085228842B13A67> IS_PEDHEADSHOT_READY;
		static GameNative<char* (int handle), 0xDB4EACD4AD0A5D6B> GET_PEDHEADSHOT_TXD_STRING;
		static GameNative<BOOL(int headshotHandle), 0xF0DAEF2F545BEE25> _0xF0DAEF2F545BEE25;
		static GameNative<void(Any p0), 0x5D517B27CF6ECD04> _0x5D517B27CF6ECD04;
		static GameNative<Any(), 0xEBB376779A760AA8> _0xEBB376779A760AA8;
		static GameNative<Any(), 0x876928DDDFCCC9CD> _0x876928DDDFCCC9CD;
		static GameNative<Any(), 0xE8A169E666CBC541> _0xE8A169E666CBC541;
		static GameNative<void(Any p0, Any p1), 0xC1F6EBF9A3D55538> _0xC1F6EBF9A3D55538;
		static GameNative<void(Any p0), 0x600048C60D5C2C51> _0x600048C60D5C2C51;
		static GameNative<void(float p0, float p1, float p2, float p3, float p4, int interiorFlags, float scale, int duration), 0x2DF9038C90AD5264> _0x2DF9038C90AD5264;
		static GameNative<void(float x, float y, float z, float p3, float p4, float p5, float p6, int interiorFlags, float scale, int duration), 0xB2AFF10216DEFA2F> _0xB2AFF10216DEFA2F;
		static GameNative<void(), 0xFEE4A5459472A9F8> _0xFEE4A5459472A9F8;
		static GameNative<Any(), 0x3C67506996001F5E> _0x3C67506996001F5E;
		static GameNative<Any(), 0xA586FBEB32A53DBB> _0xA586FBEB32A53DBB;
		static GameNative<Any(), 0xF445DE8DA80A1792> _0xF445DE8DA80A1792;
		static GameNative<Any(), 0xA635C11B8C44AFC2> _0xA635C11B8C44AFC2;
		static GameNative<void(Any p0, Any* p1, Any* p2, Any* p3), 0x280C7E3AC7F56E90> _0x280C7E3AC7F56E90;
		static GameNative<void(Any p0, Any* p1), 0xB782F8238512BAD5> _0xB782F8238512BAD5;
		static GameNative<void(Ped ped, int ikIndex, Entity entityLookAt, int boneLookAt, float offsetX, float offsetY, float offsetZ, Any p7, int blendInDuration, int blendOutDuration), 0xC32779C16FCEECD9> SET_IK_TARGET;
		static GameNative<void(Ped ped), 0xED3C76ADFA6D07C4> _0xED3C76ADFA6D07C4;
		static GameNative<void(char* asset), 0x290E2780BB7AA598> REQUEST_ACTION_MODE_ASSET;
		static GameNative<BOOL(char* asset), 0xE4B5F4BF2CB24E65> HAS_ACTION_MODE_ASSET_LOADED;
		static GameNative<void(char* asset), 0x13E940F88470FA51> REMOVE_ACTION_MODE_ASSET;
		static GameNative<void(char* asset), 0x2A0A62FCDEE16D4F> REQUEST_STEALTH_MODE_ASSET;
		static GameNative<BOOL(char* asset), 0xE977FC5B08AF3441> HAS_STEALTH_MODE_ASSET_LOADED;
		static GameNative<void(char* asset), 0x9219857D21F0E842> REMOVE_STEALTH_MODE_ASSET;
		static GameNative<void(Ped ped, float multiplier), 0xDC2C5C242AAC342B> SET_PED_LOD_MULTIPLIER;
		static GameNative<void(Pickup p0, Any p1, Blip* p2), 0xE861D0B05C7662B8> _0xE861D0B05C7662B8;
		static GameNative<void(Ped ped, BOOL toggle), 0x129466ED55140F8D> _0x129466ED55140F8D;
		static GameNative<void(Any p0, BOOL p1, Any p2, Any p3), 0xCB968B53FC7F916D> _0xCB968B53FC7F916D;
		static GameNative<BOOL(Ped ped, float x, float y, float z, float range), 0x68772DB2B2526F9F> _0x68772DB2B2526F9F;
		static GameNative<BOOL(Any p0, Any p1, float p2, float p3, float p4, float p5), 0x06087579E7AA85A9> _0x06087579E7AA85A9;
		static GameNative<void(Any p0, Any p1, Any p2, Any p3, Any p4), 0xD8C3BE3EE94CAF2D> _0xD8C3BE3EE94CAF2D;
		static GameNative<void(Ped ped), 0xD33DAA36272177C4> _0xD33DAA36272177C4;
		static GameNative<void(Any p0, Any p1), 0x83A169EABCDB10A2> _0x83A169EABCDB10A2;
		static GameNative<void(Any p0, float p1), 0x288DF530C92DAD6F> _0x288DF530C92DAD6F;
	};
};