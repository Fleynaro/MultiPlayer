#pragma once



#include "../IGameNativeGroup.h"


namespace SE {
	class GRAPHICS : public IGameNativeGroup<GRAPHICS>
	{
	public:
		static GameNative<void(BOOL enabled), 0x175B6BFC15CDD0C5> SET_DEBUG_LINES_AND_SPHERES_DRAWING_ACTIVE;
		static GameNative<void(float x1, float y1, float z1, float x2, float y2, float z2, int red, int green, int blue, int alpha), 0x7FDFADE676AA3CB0> DRAW_DEBUG_LINE;
		static GameNative<void(float x1, float y1, float z1, float x2, float y2, float z2, int r1, int g1, int b1, int r2, int g2, int b2, int alpha1, int alpha2), 0xD8B9A8AC5608FF94> DRAW_DEBUG_LINE_WITH_TWO_COLOURS;
		static GameNative<void(float x, float y, float z, float radius, int red, int green, int blue, int alpha), 0xAAD68E1AB39DA632> DRAW_DEBUG_SPHERE;
		static GameNative<void(float x1, float y1, float z1, float x2, float y2, float z2, int red, int green, int blue, int alpha), 0x083A2CA4F2E573BD> DRAW_DEBUG_BOX;
		static GameNative<void(float x, float y, float z, float size, int red, int green, int blue, int alpha), 0x73B1189623049839> DRAW_DEBUG_CROSS;
		static GameNative<void(const char* text, float x, float y, float z, int red, int green, int blue, int alpha), 0x3903E216620488E8> DRAW_DEBUG_TEXT;
		static GameNative<void(const char* text, float x, float y, float z, int red, int green, int blue, int alpha), 0xA3BB2E9555C05A8F> DRAW_DEBUG_TEXT_2D;
		static GameNative<void(float x1, float y1, float z1, float x2, float y2, float z2, int red, int green, int blue, int alpha), 0x6B7256074AE34680> DRAW_LINE;
		static GameNative<void(float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3, int red, int green, int blue, int alpha), 0xAC26716048436851> DRAW_POLY;
		static GameNative<void(float x1, float y1, float z1, float x2, float y2, float z2, int red, int green, int blue, int alpha), 0xD3A9971CADAC7252> DRAW_BOX;
		static GameNative<void(BOOL toggle), 0x23BA6B0C2AD7B0D3> _0x23BA6B0C2AD7B0D3;
		static GameNative<BOOL(), 0x1DD2139A9A20DCE8> _0x1DD2139A9A20DCE8;
		static GameNative<int(), 0x90A78ECAA4E78453> _0x90A78ECAA4E78453;
		static GameNative<void(), 0x0A46AF8A78DC5E0A> _0x0A46AF8A78DC5E0A;
		static GameNative<BOOL(const char* p0, Any* p1, Any* p2, BOOL p3), 0x4862437A486F91B0> _0x4862437A486F91B0;
		static GameNative<int(Any p0), 0x1670F8D05056F257> _0x1670F8D05056F257;
		static GameNative<BOOL(), 0x7FA5D82B8F58EC06> _0x7FA5D82B8F58EC06;
		static GameNative<int(), 0x5B0316762AFD4A64> _0x5B0316762AFD4A64;
		static GameNative<void(), 0x346EF3ECAAAB149E> _0x346EF3ECAAAB149E;
		static GameNative<BOOL(), 0xA67C35C56EB1BD9D> _0xA67C35C56EB1BD9D;
		static GameNative<int(), 0x0D6CA79EEEBD8CA3> _0x0D6CA79EEEBD8CA3;
		static GameNative<void(), 0xD801CC02177FA3F1> _0xD801CC02177FA3F1;
		static GameNative<void(BOOL p0), 0x1BBC135A4D25EDDE> _0x1BBC135A4D25EDDE;
		static GameNative<BOOL(int p0), 0x3DEC726C25A11BAC> _0x3DEC726C25A11BAC;
		static GameNative<int(), 0x0C0C4E81E1AC60A0> _0x0C0C4E81E1AC60A0;
		static GameNative<BOOL(int p0), 0x759650634F07B6B4> _0x759650634F07B6B4;
		static GameNative<int(int p0), 0xCB82A0BF0E3E3265> _0xCB82A0BF0E3E3265;
		static GameNative<void(), 0x6A12D88881435DCA> _0x6A12D88881435DCA;
		static GameNative<void(BOOL p0, BOOL p1), 0x1072F115DAB0717E> _0x1072F115DAB0717E;
		static GameNative<int(), 0x34D23450F028B0BF> GET_MAXIMUM_NUMBER_OF_PHOTOS;
		static GameNative<int(), 0xDC54A7AF8B3A14EF> _GET_MAXIMUM_NUMBER_OF_PHOTOS_2;
		static GameNative<int(), 0x473151EBC762C6DA> _GET_NUMBER_OF_PHOTOS;
		static GameNative<BOOL(BOOL p0), 0x2A893980E96B659A> _0x2A893980E96B659A;
		static GameNative<int(BOOL p0), 0xF5BED327CEA362B1> _0xF5BED327CEA362B1;
		static GameNative<void(), 0x4AF92ACD3141D96C> _0x4AF92ACD3141D96C;
		static GameNative<Any(Any p0), 0xE791DF1F73ED2C8B> _0xE791DF1F73ED2C8B;
		static GameNative<Any(Any p0), 0xEC72C258667BE5EA> _0xEC72C258667BE5EA;
		static GameNative<int(Any p0), 0x40AFB081F8ADD4EE> _RETURN_TWO;
		static GameNative<void(float x, float y, float z, int r, int g, int b, float range, float intensity, float shadow), 0xF49E9A9716A04595> _DRAW_LIGHT_WITH_RANGE_AND_SHADOW;
		static GameNative<void(float posX, float posY, float posZ, int colorR, int colorG, int colorB, float range, float intensity), 0xF2A1B2771A01DBD4> DRAW_LIGHT_WITH_RANGE;
		static GameNative<void(float posX, float posY, float posZ, float dirX, float dirY, float dirZ, int colorR, int colorG, int colorB, float distance, float brightness, float hardness, float radius, float falloff), 0xD0F64B265C8C8B33> DRAW_SPOT_LIGHT;
		static GameNative<void(float posX, float posY, float posZ, float dirX, float dirY, float dirZ, int colorR, int colorG, int colorB, float distance, float brightness, float roundness, float radius, float falloff, int shadowId), 0x5BCA583A583194DB> _DRAW_SPOT_LIGHT_WITH_SHADOW;
		static GameNative<void(float p0), 0xC9B18B4619F48F7B> _0xC9B18B4619F48F7B;
		static GameNative<void(Entity entity), 0xDEADC0DEDEADC0DE> _ENTITY_DESCRIPTION_TEXT;
		static GameNative<void(int type, float posX, float posY, float posZ, float dirX, float dirY, float dirZ, float rotX, float rotY, float rotZ, float scaleX, float scaleY, float scaleZ, int red, int green, int blue, int alpha, BOOL bobUpAndDown, BOOL faceCamera, int p19, BOOL rotate, const char* textureDict, const char* textureName, BOOL drawOnEnts), 0x28477EC23D892089> DRAW_MARKER;
		static GameNative<int(int type, float posX1, float posY1, float posZ1, float posX2, float posY2, float posZ2, float radius, int red, int green, int blue, int alpha, int reserved), 0x0134F0835AB6BFCB> CREATE_CHECKPOINT;
		static GameNative<void(int checkpoint, float iconHeight), 0x4B5B4DA5D79F1943> _SET_CHECKPOINT_ICON_HEIGHT;
		static GameNative<void(int checkpoint, float nearHeight, float farHeight, float radius), 0x2707AAE9D9297D89> SET_CHECKPOINT_CYLINDER_HEIGHT;
		static GameNative<void(int checkpoint, int red, int green, int blue, int alpha), 0x7167371E8AD747F7> SET_CHECKPOINT_RGBA;
		static GameNative<void(int checkpoint, int red, int green, int blue, int alpha), 0xB9EA40907C680580> _SET_CHECKPOINT_ICON_RGBA;
		static GameNative<void(int checkpoint, float posX, float posY, float posZ, float unkX, float unkY, float unkZ), 0xF51D36185993515D> _0xF51D36185993515D;
		static GameNative<void(int checkpoint), 0x615D3925E87A3B26> _0x615D3925E87A3B26;
		static GameNative<void(int checkpoint), 0xF5ED37F54CD4D52E> DELETE_CHECKPOINT;
		static GameNative<void(BOOL p0), 0x22A249A53034450A> _0x22A249A53034450A;
		static GameNative<void(BOOL p0), 0xDC459CFA0CCE245B> _0xDC459CFA0CCE245B;
		static GameNative<void(const char* textureDict, BOOL unused), 0xDFA2EF8E04127DD5> REQUEST_STREAMED_TEXTURE_DICT;
		static GameNative<BOOL(const char* textureDict), 0x0145F696AAAAD2E4> HAS_STREAMED_TEXTURE_DICT_LOADED;
		static GameNative<void(const char* textureDict), 0xBE2CACCF5A8AA805> SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED;
		static GameNative<void(float x, float y, float width, float height, int r, int g, int b, int a), 0x3A618A217E5154F0> DRAW_RECT;
		static GameNative<void(BOOL p0), 0xC6372ECD45D73BCD> SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU;
		static GameNative<void(int layer), 0x61BB1D9B3A95D802> _SET_UI_LAYER;
		static GameNative<void(int x, int y), 0xB8A850F20A067EB6> SET_SCRIPT_GFX_ALIGN;
		static GameNative<void(), 0xE3A3DB414A373DAB> RESET_SCRIPT_GFX_ALIGN;
		static GameNative<void(float x, float y, float p2, float p3), 0xF5A2C681787E579D> _SCREEN_DRAW_POSITION_RATIO;
		static GameNative<void(float p0, float p1, float* p2, float* p3), 0x6DD8F5AA635EB4B2> _0x6DD8F5AA635EB4B2;
		static GameNative<float(), 0xBAF107B6BB2C97F0> GET_SAFE_ZONE_SIZE;
		static GameNative<void(const char* textureDict, const char* textureName, float screenX, float screenY, float width, float height, float heading, int red, int green, int blue, int alpha), 0xE7FFAE5EBF23D890> DRAW_SPRITE;
		static GameNative<Any(Entity entity, const char* icon), 0x9CD43EEE12BF4DD0> ADD_ENTITY_ICON;
		static GameNative<void(Entity entity, BOOL toggle), 0xE0E8BEECCA96BA31> SET_ENTITY_ICON_VISIBILITY;
		static GameNative<void(Entity entity, int red, int green, int blue, int alpha), 0x1D5F595CCAE2E238> SET_ENTITY_ICON_COLOR;
		static GameNative<void(float x, float y, float z, Any p3), 0xAA0008F3BBB8F416> SET_DRAW_ORIGIN;
		static GameNative<void(), 0xFF0B610F6BE0D7AF> CLEAR_DRAW_ORIGIN;
		static GameNative<void(Entity entity), 0x845BAD77CC770633> ATTACH_TV_AUDIO_TO_ENTITY;
		static GameNative<void(BOOL toggle), 0x113D2C5DC57E1774> SET_TV_AUDIO_FRONTEND;
		static GameNative<int(const char* movieMeshSetName), 0xB66064452270E8F1> LOAD_MOVIE_MESH_SET;
		static GameNative<void(int movieMeshSet), 0xEB119AA014E89183> RELEASE_MOVIE_MESH_SET;
		static GameNative<Any(Any p0), 0x9B6E70C5CEEF4EEB> _0x9B6E70C5CEEF4EEB;
		static GameNative<void(int* x, int* y), 0x888D57E407E63624> GET_SCREEN_RESOLUTION;
		static GameNative<void(int* x, int* y), 0x873C9F3104101DD3> _GET_ACTIVE_SCREEN_RESOLUTION;
		static GameNative<float(BOOL b), 0xF1307EF624A80D87> _GET_ASPECT_RATIO;
		static GameNative<Any(), 0xB2EBE8CBC58B90E9> _0xB2EBE8CBC58B90E9;
		static GameNative<BOOL(), 0x30CF4BDA4FCB1905> GET_IS_WIDESCREEN;
		static GameNative<BOOL(), 0x84ED31191CC5D2C9> GET_IS_HIDEF;
		static GameNative<void(), 0xEFABC7722293DA7C> _0xEFABC7722293DA7C;
		static GameNative<void(BOOL toggle), 0x18F621F7A5B1F85D> SET_NIGHTVISION;
		static GameNative<Any(), 0x35FB78DC42B7BD21> _0x35FB78DC42B7BD21;
		static GameNative<BOOL(), 0x2202A3F42C8E5F79> _IS_NIGHTVISION_ACTIVE;
		static GameNative<void(BOOL p0), 0xEF398BEEE4EF45F9> _0xEF398BEEE4EF45F9;
		static GameNative<void(BOOL toggle), 0xE787BF1C5CF823C9> SET_NOISEOVERIDE;
		static GameNative<void(float value), 0xCB6A7C3BB17A0C67> SET_NOISINESSOVERIDE;
		static GameNative<BOOL(float worldX, float worldY, float worldZ, float* screenX, float* screenY), 0x34E82F05DF2974F5> GET_SCREEN_COORD_FROM_WORLD_COORD;
		static GameNative<Vector3(const char* textureDict, const char* textureName), 0x35736EE65BD00C11> GET_TEXTURE_RESOLUTION;
		static GameNative<void(float p0), 0xE2892E7E55D7073A> _0xE2892E7E55D7073A;
		static GameNative<void(float p0, float p1, float fadeIn, float duration, float fadeOut), 0x0AB84296FED9CFC6> SET_FLASH;
		static GameNative<void(), 0x3669F1B198DCAA4F> _0x3669F1B198DCAA4F;
		static GameNative<void(BOOL state), 0x1268615ACE24D504> SET_ARTIFICIAL_LIGHTS_STATE;
		static GameNative<void(), 0xC35A6D07C93802B2> _0xC35A6D07C93802B2;
		static GameNative<int(), 0xE2C9439ED45DEA60> CREATE_TRACKED_POINT;
		static GameNative<void(int point, float x, float y, float z, float radius), 0x164ECBB3CF750CB0> SET_TRACKED_POINT_INFO;
		static GameNative<BOOL(int point), 0xC45CCDAAC9221CA8> IS_TRACKED_POINT_VISIBLE;
		static GameNative<void(int point), 0xB25DC90BAD56CA42> DESTROY_TRACKED_POINT;
		static GameNative<Any(Any p0, Any p1, Any p2, Any p3), 0xBE197EAA669238F4> _0xBE197EAA669238F4;
		static GameNative<void(Any p0), 0x61F95E5BB3E0A8C6> _0x61F95E5BB3E0A8C6;
		static GameNative<void(Any p0, float p1, float p2, float p3, float p4), 0xAE51BC858F32BA66> _0xAE51BC858F32BA66;
		static GameNative<void(Any p0), 0x649C97D52332341A> _0x649C97D52332341A;
		static GameNative<Any(Any p0), 0x2C42340F916C5930> _0x2C42340F916C5930;
		static GameNative<void(), 0x14FC5833464340A8> _0x14FC5833464340A8;
		static GameNative<void(), 0x0218BA067D249DEA> _0x0218BA067D249DEA;
		static GameNative<void(), 0x1612C45F9E3E0D44> _0x1612C45F9E3E0D44;
		static GameNative<void(), 0x5DEBD9C4DC995692> _0x5DEBD9C4DC995692;
		static GameNative<void(float x, float y, float z, float p3, float p4, float p5, float p6), 0x6D955F6A9E0295B1> _0x6D955F6A9E0295B1;
		static GameNative<void(), 0x302C91AB2D477F7E> _0x302C91AB2D477F7E;
		static GameNative<void(), 0x03FC694AE06C5A20> _0x03FC694AE06C5A20;
		static GameNative<void(int p0, BOOL p1, float x, float y, float z, float p5, BOOL p6, BOOL p7), 0xD2936CAB8B58FCBD> _0xD2936CAB8B58FCBD;
		static GameNative<void(float p0), 0x5F0F3F56635809EF> _0x5F0F3F56635809EF;
		static GameNative<void(float p0), 0x5E9DAF5A20F15908> _0x5E9DAF5A20F15908;
		static GameNative<void(float p0), 0x36F6626459D91457> _0x36F6626459D91457;
		static GameNative<void(BOOL toggle), 0x80ECBC0C856D3B0B> _SET_FAR_SHADOWS_SUPPRESSED;
		static GameNative<void(BOOL p0), 0x25FC3E33A31AD0C9> _0x25FC3E33A31AD0C9;
		static GameNative<void(const char* p0), 0xB11D94BC55F41932> _0xB11D94BC55F41932;
		static GameNative<void(), 0x27CB772218215325> _0x27CB772218215325;
		static GameNative<void(BOOL p0), 0x6DDBF9DFFC4AC080> _0x6DDBF9DFFC4AC080;
		static GameNative<void(BOOL p0), 0xD39D13C9FEBF0511> _0xD39D13C9FEBF0511;
		static GameNative<void(float p0), 0x02AC28F3A01FA04A> _0x02AC28F3A01FA04A;
		static GameNative<void(BOOL p0), 0x0AE73D8DF3A762B2> _0x0AE73D8DF3A762B2;
		static GameNative<void(BOOL p0), 0xA51C4B86B71652AE> _0xA51C4B86B71652AE;
		static GameNative<void(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, BOOL p8), 0x312342E1A4874F3F> _0x312342E1A4874F3F;
		static GameNative<void(float p0, float p1, float p2), 0x2485D34E50A22E84> _0x2485D34E50A22E84;
		static GameNative<void(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11), 0x12995F2E53FFA601> _0x12995F2E53FFA601;
		static GameNative<void(Any p0, Any p1), 0xDBAA5EC848BA2D46> _0xDBAA5EC848BA2D46;
		static GameNative<void(BOOL p0), 0xC0416B061F2B7E5E> _0xC0416B061F2B7E5E;
		static GameNative<void(int type, float xPos, float yPos, float zPos, float p4, int red, int green, int blue, int alpha), 0xB1BB03742917A5D6> _0xB1BB03742917A5D6;
		static GameNative<void(float p0, float p1, float p2, float p3, float p4), 0x9CFDD90B2B844BF7> _0x9CFDD90B2B844BF7;
		static GameNative<void(BOOL p0), 0x06F761EA47C1D3ED> _0x06F761EA47C1D3ED;
		static GameNative<Any(), 0xA4819F5E23E2FFAD> _0xA4819F5E23E2FFAD;
		static GameNative<Vector3(Any p0), 0xA4664972A9B8F8BA> _0xA4664972A9B8F8BA;
		static GameNative<void(BOOL toggle), 0x7E08924259E08CE0> SET_SEETHROUGH;
		static GameNative<BOOL(), 0x44B80ABAB9D80BD3> _IS_SEETHROUGH_ACTIVE;
		static GameNative<void(Any p0, float p1), 0xD7D0B00177485411> _0xD7D0B00177485411;
		static GameNative<void(float p0), 0xB3C641F3630BF6DA> _0xB3C641F3630BF6DA;
		static GameNative<Any(), 0xE59343E9E96529E7> _0xE59343E9E96529E7;
		static GameNative<void(BOOL p0), 0xE63D7C6EECECB66B> _0xE63D7C6EECECB66B;
		static GameNative<void(int unk), 0xE3E2C1B4C59DBC77> _0xE3E2C1B4C59DBC77;
		static GameNative<BOOL(float transitionTime), 0xA328A24AAA6B7FDC> _TRANSITION_TO_BLURRED;
		static GameNative<BOOL(float transitionTime), 0xEFACC8AEF94430D5> _TRANSITION_FROM_BLURRED;
		static GameNative<void(), 0xDE81239437E8C5A8> _0xDE81239437E8C5A8;
		static GameNative<float(), 0x5CCABFFCA31DDE33> IS_PARTICLE_FX_DELAYED_BLINK;
		static GameNative<Any(), 0x7B226C785A52A0A9> _0x7B226C785A52A0A9;
		static GameNative<void(BOOL toggle), 0xDFC252D8A3E15AB7> _TOGGLE_PAUSE_RENDER_PHASES;
		static GameNative<BOOL(), 0xEB3DAC2C86001E5E> _0xEB3DAC2C86001E5E;
		static GameNative<void(), 0xE1C8709406F2C41C> _0xE1C8709406F2C41C;
		static GameNative<void(), 0x851CD923176EBA7C> _0x851CD923176EBA7C;
		static GameNative<void(BOOL p0, BOOL p1, float p2, float p3, float p4, float p5), 0xBA3D65906822BED5> _0xBA3D65906822BED5;
		static GameNative<BOOL(BOOL p0), 0x7AC24EAB6D74118D> _0x7AC24EAB6D74118D;
		static GameNative<Any(), 0xBCEDB009461DA156> _0xBCEDB009461DA156;
		static GameNative<BOOL(const char* textureDict, BOOL p1), 0x27FEB5254759CDE3> _0x27FEB5254759CDE3;
		static GameNative<int(const char* effectName, float xPos, float yPos, float zPos, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis), 0x25129531F77B9ED3> START_PARTICLE_FX_NON_LOOPED_AT_COORD;
		static GameNative<BOOL(const char* effectName, float xPos, float yPos, float zPos, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis), 0xF56B8137DF10135D> START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD;
		static GameNative<BOOL(const char* effectName, Ped ped, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, int boneIndex, float scale, BOOL axisX, BOOL axisY, BOOL axisZ), 0x0E7E72961BA18619> START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE;
		static GameNative<BOOL(const char* effectName, Ped ped, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, int boneIndex, float scale, BOOL axisX, BOOL axisY, BOOL axisZ), 0xA41B6A43642AC2CF> START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_PED_BONE;
		static GameNative<BOOL(const char* effectName, Entity entity, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, float scale, BOOL axisX, BOOL axisY, BOOL axisZ), 0x0D53A3B8DA0809D2> START_PARTICLE_FX_NON_LOOPED_ON_ENTITY;
		static GameNative<BOOL(const char* effectName, Entity entity, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, float scale, BOOL axisX, BOOL axisY, BOOL axisZ), 0xC95EB1DB6E92113D> _START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY;
		static GameNative<void(float r, float g, float b), 0x26143A59EF48B262> SET_PARTICLE_FX_NON_LOOPED_COLOUR;
		static GameNative<void(float alpha), 0x77168D722C58B2FC> SET_PARTICLE_FX_NON_LOOPED_ALPHA;
		static GameNative<void(BOOL p0), 0x8CDE909A0370BB3A> _0x8CDE909A0370BB3A;
		static GameNative<int(const char* effectName, float x, float y, float z, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis, BOOL p11), 0xE184F4F0DC5910E7> START_PARTICLE_FX_LOOPED_AT_COORD;
		static GameNative<int(const char* effectName, Ped ped, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, int boneIndex, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis), 0xF28DA9F38CD1787C> START_PARTICLE_FX_LOOPED_ON_PED_BONE;
		static GameNative<int(const char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis), 0x1AE42C1660FD6517> START_PARTICLE_FX_LOOPED_ON_ENTITY;
		static GameNative<int(const char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, int boneIndex, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis), 0xC6EB449E33977F0B> _START_PARTICLE_FX_LOOPED_ON_ENTITY_BONE;
		static GameNative<int(const char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis), 0x6F60E89A7B64EE1D> START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY;
		static GameNative<int(const char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, int boneIndex, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis), 0xDDE23F30CC5A0F03> _START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE;
		static GameNative<void(int ptfxHandle, BOOL p1), 0x8F75998877616996> STOP_PARTICLE_FX_LOOPED;
		static GameNative<void(int ptfxHandle, BOOL p1), 0xC401503DFE8D53CF> REMOVE_PARTICLE_FX;
		static GameNative<void(Entity entity), 0xB8FEAEEBCC127425> REMOVE_PARTICLE_FX_FROM_ENTITY;
		static GameNative<void(float X, float Y, float Z, float radius), 0xDD19FA1C6D657305> REMOVE_PARTICLE_FX_IN_RANGE;
		static GameNative<BOOL(int ptfxHandle), 0x74AFEF0D2E1E409B> DOES_PARTICLE_FX_LOOPED_EXIST;
		static GameNative<void(int ptfxHandle, float x, float y, float z, float rotX, float rotY, float rotZ), 0xF7DDEBEC43483C43> SET_PARTICLE_FX_LOOPED_OFFSETS;
		static GameNative<void(int ptfxHandle, const char* propertyName, float amount, BOOL Id), 0x5F0C4B5B1C393BE2> SET_PARTICLE_FX_LOOPED_EVOLUTION;
		static GameNative<void(int ptfxHandle, float r, float g, float b, BOOL p4), 0x7F8F65877F88783B> SET_PARTICLE_FX_LOOPED_COLOUR;
		static GameNative<void(int ptfxHandle, float alpha), 0x726845132380142E> SET_PARTICLE_FX_LOOPED_ALPHA;
		static GameNative<void(int ptfxHandle, float scale), 0xB44250AAA456492D> SET_PARTICLE_FX_LOOPED_SCALE;
		static GameNative<void(int ptfxHandle, float dist), 0xDCB194B85EF7B541> SET_PARTICLE_FX_LOOPED_FAR_CLIP_DIST;
		static GameNative<void(BOOL p0), 0xEEC4047028426510> SET_PARTICLE_FX_CAM_INSIDE_VEHICLE;
		static GameNative<void(Any p0, BOOL p1), 0xACEE6F360FC1F6B6> SET_PARTICLE_FX_CAM_INSIDE_NONPLAYER_VEHICLE;
		static GameNative<void(Any p0), 0x96EF97DAEB89BEF5> SET_PARTICLE_FX_SHOOTOUT_BOAT;
		static GameNative<void(BOOL p0), 0x5F6DF3D92271E8A1> SET_PARTICLE_FX_BLOOD_SCALE;
		static GameNative<void(BOOL toggle), 0xD821490579791273> ENABLE_CLOWN_BLOOD_VFX;
		static GameNative<void(BOOL Toggle), 0x9DCE1F0F78260875> ENABLE_ALIEN_BLOOD_VFX;
		static GameNative<void(float p0), 0x27E32866E9A5C416> _0x27E32866E9A5C416;
		static GameNative<void(float p0), 0xBB90E12CAC1DAB25> _0xBB90E12CAC1DAB25;
		static GameNative<void(BOOL p0), 0xCA4AE345A153D573> _0xCA4AE345A153D573;
		static GameNative<void(float p0), 0x54E22EA2C1956A8D> _0x54E22EA2C1956A8D;
		static GameNative<void(float p0), 0x949F397A288B28B3> _0x949F397A288B28B3;
		static GameNative<void(BOOL p0), 0x9B079E5221D984D3> _0x9B079E5221D984D3;
		static GameNative<void(const char* name), 0x6C38AF3693A69A91> USE_PARTICLE_FX_ASSET;
		static GameNative<void(const char* oldAsset, const char* newAsset), 0xEA1E2D93F6F75ED9> _SET_PARTICLE_FX_ASSET_OLD_TO_NEW;
		static GameNative<void(const char* name), 0x89C8553DD3274AAE> _RESET_PARTICLE_FX_ASSET_OLD_TO_NEW;
		static GameNative<void(BOOL p0), 0xA46B73FAA3460AE1> _0xA46B73FAA3460AE1;
		static GameNative<void(float p0), 0xF78B803082D4386F> _0xF78B803082D4386F;
		static GameNative<void(Any p0, Any p1, Any p2, Any p3, Any p4), 0x9C30613D50A6ADEF> WASH_DECALS_IN_RANGE;
		static GameNative<void(Vehicle vehicle, float p1), 0x5B712761429DBC14> WASH_DECALS_FROM_VEHICLE;
		static GameNative<void(Any p0, Any p1, Any p2, Any p3, Any p4), 0xD77EDADB0420E6E0> FADE_DECALS_IN_RANGE;
		static GameNative<void(float x, float y, float z, float range), 0x5D6B2D4830A67C62> REMOVE_DECALS_IN_RANGE;
		static GameNative<void(Object obj), 0xCCF71CBDDF5B6CB9> REMOVE_DECALS_FROM_OBJECT;
		static GameNative<void(Object obj, float x, float y, float z), 0xA6F6F70FDC6D144C> REMOVE_DECALS_FROM_OBJECT_FACING;
		static GameNative<void(Vehicle vehicle), 0xE91F1B65F2B48D57> REMOVE_DECALS_FROM_VEHICLE;
		static GameNative<Object(int decalType, float posX, float posY, float posZ, float p4, float p5, float p6, float p7, float p8, float p9, float width, float height, float rCoef, float gCoef, float bCoef, float opacity, float timeout, BOOL p17, BOOL p18, BOOL p19), 0xB302244A1839BDAD> ADD_DECAL;
		static GameNative<Any(float x, float y, float z, float groundLvl, float width, float transparency), 0x4F5212C7AD880DF8> ADD_PETROL_DECAL;
		static GameNative<void(float p0), 0x99AC7F0D8B9C893D> _0x99AC7F0D8B9C893D;
		static GameNative<void(Any p0, Any p1, Any p2, Any p3), 0x967278682CB6967A> _0x967278682CB6967A;
		static GameNative<void(), 0x0A123435A26C36CD> _0x0A123435A26C36CD;
		static GameNative<void(Object decal), 0xED3F346429CCD659> REMOVE_DECAL;
		static GameNative<BOOL(Object decal), 0xC694D74949CAFD0C> IS_DECAL_ALIVE;
		static GameNative<float(int decal), 0x323F647679A09103> GET_DECAL_WASH_LEVEL;
		static GameNative<void(), 0xD9454B5752C857DC> _0xD9454B5752C857DC;
		static GameNative<void(), 0x27CFB1B1E078CB2D> _0x27CFB1B1E078CB2D;
		static GameNative<void(), 0x4B5CFC83122DF602> _0x4B5CFC83122DF602;
		static GameNative<BOOL(float xCoord, float yCoord, float zCoord, float p3), 0x2F09F7976C512404> _0x2F09F7976C512404;
		static GameNative<void(int decalType, const char* textureDict, const char* textureName), 0x8A35C742130C6080> _OVERRIDE_DECAL_TEXTURE;
		static GameNative<void(int decalType), 0xB7ED70C49521A61D> _0xB7ED70C49521A61D;
		static GameNative<void(Vehicle vehicle1, Vehicle vehicle2), 0x84C8D7C2D30D3280> MOVE_VEHICLE_DECALS;
		static GameNative<BOOL(Vehicle vehicle, Ped ped, int boneIndex, float x1, float x2, float x3, float y1, float y2, float y3, float z1, float z2, float z3, float scale, int decalIndex, int alpha), 0x428BDCB9DA58DA53> _ADD_CLAN_DECAL_TO_VEHICLE;
		static GameNative<void(Vehicle vehicle, Any p1), 0xD2300034310557E4> _0xD2300034310557E4;
		static GameNative<int(Vehicle vehicle, Any p1), 0xFE26117A5841B2FF> _0xFE26117A5841B2FF;
		static GameNative<BOOL(Vehicle vehicle, int decalIndex), 0x060D935D3981A275> _DOES_VEHICLE_HAVE_DECAL;
		static GameNative<void(BOOL p0), 0x0E4299C549F0D1F1> _0x0E4299C549F0D1F1;
		static GameNative<void(BOOL p0), 0x02369D5C8A51FDCF> _0x02369D5C8A51FDCF;
		static GameNative<void(float p0), 0x46D1A61A21F566FC> _0x46D1A61A21F566FC;
		static GameNative<void(Any* p0), 0x2A2A52824DB96700> _0x2A2A52824DB96700;
		static GameNative<void(float p0), 0x1600FD8CF72EBC12> _0x1600FD8CF72EBC12;
		static GameNative<void(), 0xEFB55E7C25D3B3BE> _0xEFB55E7C25D3B3BE;
		static GameNative<void(), 0xA44FF770DFBC5DAE> _0xA44FF770DFBC5DAE;
		static GameNative<void(BOOL toggle), 0xC9F98AC1884E73A2> DISABLE_VEHICLE_DISTANTLIGHTS;
		static GameNative<void(BOOL p0), 0x03300B57FCAC6DDB> _0x03300B57FCAC6DDB;
		static GameNative<void(), 0x98EDF76A7271E4F2> _0x98EDF76A7271E4F2;
		static GameNative<void(BOOL toggle), 0xAEEDAD1420C65CC0> _SET_FORCE_PED_FOOTSTEPS_TRACKS;
		static GameNative<void(BOOL toggle), 0x4CC7F0FEA5283FE0> _SET_FORCE_VEHICLE_TRAILS;
		static GameNative<void(const char* tcModifierName), 0xD7021272EB0A451E> _PRESET_INTERIOR_AMBIENT_CACHE;
		static GameNative<void(const char* modifierName), 0x2C933ABF17A1DF41> SET_TIMECYCLE_MODIFIER;
		static GameNative<void(float strength), 0x82E7FFCD5B2326B3> SET_TIMECYCLE_MODIFIER_STRENGTH;
		static GameNative<void(const char* modifierName, float transition), 0x3BCF567485E1971C> SET_TRANSITION_TIMECYCLE_MODIFIER;
		static GameNative<void(float p0), 0x1CBA05AE7BD7EE05> _0x1CBA05AE7BD7EE05;
		static GameNative<void(), 0x0F07E7745A236711> CLEAR_TIMECYCLE_MODIFIER;
		static GameNative<int(), 0xFDF3D97C674AFB66> GET_TIMECYCLE_MODIFIER_INDEX;
		static GameNative<Any(), 0x459FD2C8D0AB78BC> _0x459FD2C8D0AB78BC;
		static GameNative<void(), 0x58F735290861E6B4> PUSH_TIMECYCLE_MODIFIER;
		static GameNative<void(), 0x3C8938D7D872211E> POP_TIMECYCLE_MODIFIER;
		static GameNative<void(const char* p0), 0xBBF327DED94E4DEB> _0xBBF327DED94E4DEB;
		static GameNative<void(float p0), 0xBDEB86F4D5809204> _0xBDEB86F4D5809204;
		static GameNative<void(const char* p0), 0xBF59707B3E5ED531> _0xBF59707B3E5ED531;
		static GameNative<void(Any* p0, Any* p1), 0x1A8E2C8B9CF4549C> _0x1A8E2C8B9CF4549C;
		static GameNative<void(Any p0), 0x15E33297C3E8DC60> _0x15E33297C3E8DC60;
		static GameNative<void(const char* p0), 0x5096FD9CCB49056D> _0x5096FD9CCB49056D;
		static GameNative<void(), 0x92CCC17A7A2285DA> _0x92CCC17A7A2285DA;
		static GameNative<Any(), 0xBB0527EC6341496D> _0xBB0527EC6341496D;
		static GameNative<void(float p0), 0x2C328AF17210F009> _0x2C328AF17210F009;
		static GameNative<void(), 0x2BF72AD5B41AA739> _0x2BF72AD5B41AA739;
		static GameNative<int(const char* scaleformName), 0x11FE353CF9733E6F> REQUEST_SCALEFORM_MOVIE;
		static GameNative<int(const char* scaleformName), 0xC514489CFB8AF806> REQUEST_SCALEFORM_MOVIE_INSTANCE;
		static GameNative<int(const char* scaleformName), 0xBD06C611BB9048C2> _REQUEST_SCALEFORM_MOVIE_INTERACTIVE;
		static GameNative<BOOL(int scaleformHandle), 0x85F01B8D5B90570E> HAS_SCALEFORM_MOVIE_LOADED;
		static GameNative<BOOL(const char* scaleformName), 0x0C1C5D756FB5F337> _HAS_NAMED_SCALEFORM_MOVIE_LOADED;
		static GameNative<BOOL(int scaleformHandle), 0x8217150E1217EBFD> HAS_SCALEFORM_CONTAINER_MOVIE_LOADED_INTO_PARENT;
		static GameNative<void(int* scaleformHandle), 0x1D132D614DD86811> SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED;
		static GameNative<void(int scaleform, BOOL toggle), 0x6D8EB211944DCE08> SET_SCALEFORM_MOVIE_TO_USE_SYSTEM_TIME;
		static GameNative<void(int scaleformHandle, float x, float y, float width, float height, int red, int green, int blue, int alpha, int unk), 0x54972ADAF0294A93> DRAW_SCALEFORM_MOVIE;
		static GameNative<void(int scaleform, int red, int green, int blue, int alpha, int unk), 0x0DF606929C105BE1> DRAW_SCALEFORM_MOVIE_FULLSCREEN;
		static GameNative<void(int scaleform1, int scaleform2, int red, int green, int blue, int alpha), 0xCF537FDE4FBD4CE5> DRAW_SCALEFORM_MOVIE_FULLSCREEN_MASKED;
		static GameNative<void(int scaleform, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float p7, float sharpness, float p9, float scaleX, float scaleY, float scaleZ, Any p13), 0x87D51D72255D4E78> DRAW_SCALEFORM_MOVIE_3D;
		static GameNative<void(int scaleform, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float p7, float p8, float p9, float scaleX, float scaleY, float scaleZ, Any p13), 0x1CE592FDC749D6F5> _DRAW_SCALEFORM_MOVIE_3D_NON_ADDITIVE;
		static GameNative<void(int scaleform, const char* method), 0xFBD96D87AC96D533> CALL_SCALEFORM_MOVIE_METHOD;
		static GameNative<void(int scaleform, const char* functionName, float param1, float param2, float param3, float param4, float param5), 0xD0837058AE2E4BEE> _CALL_SCALEFORM_MOVIE_FUNCTION_FLOAT_PARAMS;
		static GameNative<void(int scaleform, const char* functionName, const char* param1, const char* param2, const char* param3, const char* param4, const char* param5), 0x51BC1ED3CC44E8F7> _CALL_SCALEFORM_MOVIE_FUNCTION_STRING_PARAMS;
		static GameNative<void(int scaleform, const char* functionName, float floatParam1, float floatParam2, float floatParam3, float floatParam4, float floatParam5, const char* stringParam1, const char* stringParam2, const char* stringParam3, const char* stringParam4, const char* stringParam5), 0xEF662D8D57E290B1> _CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS;
		static GameNative<BOOL(int hudComponent, const char* functionName), 0x98C494FD5BDFBFD5> _BEGIN_SCALEFORM_MOVIE_METHOD_HUD_COMPONENT;
		static GameNative<BOOL(int scaleform, const char* functionName), 0xF6E48914C7A8694E> BEGIN_SCALEFORM_MOVIE_METHOD;
		static GameNative<BOOL(const char* functionName), 0xAB58C27C2E6123C6> _BEGIN_SCALEFORM_MOVIE_METHOD_N;
		static GameNative<BOOL(const char* functionName), 0xB9449845F73F5E9C> _BEGIN_SCALEFORM_MOVIE_METHOD_V;
		static GameNative<void(), 0xC6796A8FFA375E53> END_SCALEFORM_MOVIE_METHOD;
		static GameNative<int(), 0xC50AA39A577AF886> _END_SCALEFORM_MOVIE_METHOD_RETURN;
		static GameNative<BOOL(int method_return), 0x768FF8961BA904D6> _GET_SCALEFORM_MOVIE_FUNCTION_RETURN_BOOL;
		static GameNative<int(int method_return), 0x2DE7EFA66B906036> _GET_SCALEFORM_MOVIE_FUNCTION_RETURN_INT;
		static GameNative<const char* (int method_return), 0xE1E258829A885245> SITTING_TV;
		static GameNative<void(int value), 0xC3D0841A0CC546A6> _ADD_SCALEFORM_MOVIE_METHOD_PARAMETER_INT;
		static GameNative<void(float value), 0xD69736AAE04DB51A> _ADD_SCALEFORM_MOVIE_METHOD_PARAMETER_FLOAT;
		static GameNative<void(BOOL value), 0xC58424BA936EB458> _ADD_SCALEFORM_MOVIE_METHOD_PARAMETER_BOOL;
		static GameNative<void(const char* componentType), 0x80338406F3475E55> BEGIN_TEXT_COMMAND_SCALEFORM_STRING;
		static GameNative<void(), 0x362E2D3FE93A9959> END_TEXT_COMMAND_SCALEFORM_STRING;
		static GameNative<void(), 0xAE4E8157D9ECF087> _END_TEXT_COMMAND_SCALEFORM_STRING_2;
		static GameNative<void(const char* value), 0xBA7148484BD90365> _ADD_SCALEFORM_MOVIE_METHOD_PARAMETER_STRING;
		static GameNative<void(const char* button), 0xE83A3E3557A56640> _ADD_SCALEFORM_MOVIE_METHOD_PARAMETER_BUTTON_NAME;
		static GameNative<BOOL(int p0), 0x5E657EF1099EDD65> _0x5E657EF1099EDD65;
		static GameNative<void(int p0), 0xEC52C631A1831C03> _0xEC52C631A1831C03;
		static GameNative<void(int hudComponent), 0x9304881D6F6537EA> _REQUEST_HUD_SCALEFORM;
		static GameNative<BOOL(int hudComponent), 0xDF6E5987D2B4D140> _HAS_HUD_SCALEFORM_LOADED;
		static GameNative<void(Any p0), 0xF44A5456AC3F4F97> _0xF44A5456AC3F4F97;
		static GameNative<BOOL(int scaleformHandle), 0xD1C7CB175E012964> _0xD1C7CB175E012964;
		static GameNative<void(int channel), 0xBAABBB23EB6E484E> SET_TV_CHANNEL;
		static GameNative<int(), 0xFC1E275A90D39995> GET_TV_CHANNEL;
		static GameNative<void(float volume), 0x2982BF73F66E9DDC> SET_TV_VOLUME;
		static GameNative<float(), 0x2170813D3DD8661B> GET_TV_VOLUME;
		static GameNative<void(float xPos, float yPos, float xScale, float yScale, float rotation, int red, int green, int blue, int alpha), 0xFDDC2B4ED3C69DF0> DRAW_TV_CHANNEL;
		static GameNative<void(int channel, const char* playlist, BOOL fromBeginning), 0xF7B38B8305F1FE8B> SET_TV_CHANNEL_PLAYLIST;
		static GameNative<void(Any p0, const char* p1, Any p2), 0x2201C576FACAEBE8> _0x2201C576FACAEBE8;
		static GameNative<void(Any p0), 0xBEB3D46BB7F043C0> _0xBEB3D46BB7F043C0;
		static GameNative<BOOL(Hash videoClip), 0x0AD973CA1E077B60> _IS_TV_PLAYLIST_ITEM_PLAYING;
		static GameNative<void(BOOL p0), 0x74C180030FDE4B69> _0x74C180030FDE4B69;
		static GameNative<void(Any p0), 0xD1C55B110E4DF534> _0xD1C55B110E4DF534;
		static GameNative<void(BOOL toggle), 0x873FA65C778AD970> ENABLE_MOVIE_SUBTITLES;
		static GameNative<BOOL(), 0xD3A10FC7FD8D98CD> _0xD3A10FC7FD8D98CD;
		static GameNative<BOOL(const char* p0), 0xF1CEA8A4198D8E9A> _0xF1CEA8A4198D8E9A;
		static GameNative<BOOL(const char* p0, Ped ped, int p2, float posX, float posY, float posZ), 0x98C4FE6EC34154CA> _DRAW_SHOWROOM;
		static GameNative<void(), 0x7A42B2E236E71415> _0x7A42B2E236E71415;
		static GameNative<void(BOOL p0), 0x108BE26959A9D9BB> _0x108BE26959A9D9BB;
		static GameNative<void(BOOL p0), 0xA356990E161C9E65> _0xA356990E161C9E65;
		static GameNative<void(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11, float p12), 0x1C4FC5752BCD8E48> _0x1C4FC5752BCD8E48;
		static GameNative<void(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11), 0x5CE62918F8D703C7> _0x5CE62918F8D703C7;
		static GameNative<void(const char* effectName, int duration, BOOL looped), 0x2206BF9A37B7F724> ANIMPOSTFX_PLAY;
		static GameNative<void(const char* effectName), 0x068E835A1D0DC0E3> ANIMPOSTFX_STOP;
		static GameNative<BOOL(const char* effectName), 0x36AD3E690DA5ACEB> ANIMPOSTFX_IS_RUNNING;
		static GameNative<void(), 0xB4EDDC19532BFB85> ANIMPOSTFX_STOP_ALL;
		static GameNative<void(const char* graphicsName), 0xD2209BE128B5418C> _0xD2209BE128B5418C;
	};
};