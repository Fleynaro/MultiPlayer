#pragma once



#include "../IGameNativeGroup.h"


namespace SE {
	class GAMEPLAY : public IGameNativeGroup<GAMEPLAY>
	{
	public:
		static GameNative<int(), 0x8B3CA62B1EF19B62> GET_ALLOCATED_STACK_SIZE;
		static GameNative<int(int threadId), 0xFEAD16FC8F9DFC0F> _GET_FREE_STACK_SLOTS_COUNT;
		static GameNative<void(int time), 0x444D98F98C11F3EC> SET_RANDOM_SEED;
		static GameNative<void(float time), 0x1D408577D440E81E> SET_TIME_SCALE;
		static GameNative<void(BOOL toggle), 0xC4301E5121A0ED73> SET_MISSION_FLAG;
		static GameNative<BOOL(), 0xA33CDCCDA663159E> GET_MISSION_FLAG;
		static GameNative<void(BOOL p0), 0x971927086CFD2158> SET_RANDOM_EVENT_FLAG;
		static GameNative<BOOL(), 0xD2D57F1D764117B1> GET_RANDOM_EVENT_FLAG;
		static GameNative<const char* (), 0x24DA7D7667FD7B09> _GET_GLOBAL_CHAR_BUFFER;
		static GameNative<void(const char* p0, const char* p1), 0x4DCDF92BF64236CD> _0x4DCDF92BF64236CD;
		static GameNative<void(Any* p0), 0x31125FD509D9043F> _0x31125FD509D9043F;
		static GameNative<void(Any* p0), 0xEBD3205A207939ED> _0xEBD3205A207939ED;
		static GameNative<void(Any p0), 0x97E7E2C04245115B> _0x97E7E2C04245115B;
		static GameNative<void(Any p0, Any p1), 0xEB078CA2B5E82ADD> _0xEB078CA2B5E82ADD;
		static GameNative<void(Any p0), 0x703CC7F60CBB2B57> _0x703CC7F60CBB2B57;
		static GameNative<void(), 0x8951EB9C6906D3C8> _0x8951EB9C6906D3C8;
		static GameNative<void(Any p0), 0xBA4B8D83BDC75551> _0xBA4B8D83BDC75551;
		static GameNative<BOOL(), 0xE8B9C0EC9E183F35> _0xE8B9C0EC9E183F35;
		static GameNative<void(BOOL p0), 0x65D2EBB47E1CEC21> _0x65D2EBB47E1CEC21;
		static GameNative<void(BOOL p0), 0x6F2135B6129620C1> _0x6F2135B6129620C1;
		static GameNative<void(const char* p0), 0x8D74E26F54B4E5C3> _0x8D74E26F54B4E5C3;
		static GameNative<BOOL(Any* p1, Any* p2, Any p3, BOOL p4), 0xB335F761606DB47C> _0xB335F761606DB47C;
		static GameNative<Hash(), 0x564B884A05EC45A3> GET_PREV_WEATHER_TYPE_HASH_NAME;
		static GameNative<Hash(), 0x711327CD09C8F162> GET_NEXT_WEATHER_TYPE_HASH_NAME;
		static GameNative<BOOL(const char* weatherType), 0x44F28F86433B10A9> IS_PREV_WEATHER_TYPE;
		static GameNative<BOOL(const char* weatherType), 0x2FAA3A30BEC0F25D> IS_NEXT_WEATHER_TYPE;
		static GameNative<void(const char* weatherType), 0x704983DF373B198F> SET_WEATHER_TYPE_PERSIST;
		static GameNative<void(const char* weatherType), 0xED712CA327900C8A> SET_WEATHER_TYPE_NOW_PERSIST;
		static GameNative<void(const char* weatherType), 0x29B487C359E19889> SET_WEATHER_TYPE_NOW;
		static GameNative<void(const char* weatherType, float time), 0xFB5045B7C42B75BF> _SET_WEATHER_TYPE_OVER_TIME;
		static GameNative<void(), 0x8B05F884CF7E8020> SET_RANDOM_WEATHER_TYPE;
		static GameNative<void(), 0xCCC39339BEF76CF5> CLEAR_WEATHER_TYPE_PERSIST;
		static GameNative<void(Hash* weatherType1, Hash* weatherType2, float* percentWeather2), 0xF3BBE884A14BB413> _GET_WEATHER_TYPE_TRANSITION;
		static GameNative<void(Hash weatherType1, Hash weatherType2, float percentWeather2), 0x578C752848ECFA0C> _SET_WEATHER_TYPE_TRANSITION;
		static GameNative<void(const char* weatherType), 0xA43D5C6FE51ADBEF> SET_OVERRIDE_WEATHER;
		static GameNative<void(), 0x338D2E3477711050> CLEAR_OVERRIDE_WEATHER;
		static GameNative<void(float p0), 0xB8F87EAD7533B176> _0xB8F87EAD7533B176;
		static GameNative<void(float p0), 0xC3EAD29AB273ECE8> _0xC3EAD29AB273ECE8;
		static GameNative<void(float p0), 0xA7A1127490312C36> _0xA7A1127490312C36;
		static GameNative<void(float p0), 0x31727907B2C43C55> _0x31727907B2C43C55;
		static GameNative<void(float p0), 0x405591EC8FD9096D> _0x405591EC8FD9096D;
		static GameNative<void(float p0), 0xF751B16FB32ABC1D> _0xF751B16FB32ABC1D;
		static GameNative<void(float p0), 0xB3E6360DDE733E82> _0xB3E6360DDE733E82;
		static GameNative<void(float p0), 0x7C9C0B1EEB1F9072> _0x7C9C0B1EEB1F9072;
		static GameNative<void(float p0), 0x6216B116083A7CB4> _0x6216B116083A7CB4;
		static GameNative<void(float p0), 0x9F5E6BB6B34540DA> _0x9F5E6BB6B34540DA;
		static GameNative<void(float p0), 0xB9854DFDE0D833D6> _0xB9854DFDE0D833D6;
		static GameNative<void(float p0), 0xC54A08C85AE4D410> _0xC54A08C85AE4D410;
		static GameNative<void(float p0), 0xA8434F1DFF41D6E7> _0xA8434F1DFF41D6E7;
		static GameNative<void(float p0), 0xC3C221ADDDE31A11> _0xC3C221ADDDE31A11;
		static GameNative<void(float speed), 0xAC3A74E8384A9919> SET_WIND;
		static GameNative<void(float speed), 0xEE09ECEDBABE47FC> SET_WIND_SPEED;
		static GameNative<float(), 0xA8CF1CC0AFCD3F12> GET_WIND_SPEED;
		static GameNative<void(float direction), 0xEB0F4468467B4528> SET_WIND_DIRECTION;
		static GameNative<Vector3(), 0x1F400FEF721170DA> GET_WIND_DIRECTION;
		static GameNative<void(float intensity), 0x643E26EA6E024D92> _SET_RAIN_FX_INTENSITY;
		static GameNative<float(), 0x96695E368AD855F3> GET_RAIN_LEVEL;
		static GameNative<float(), 0xC5868A966E5BE3AE> GET_SNOW_LEVEL;
		static GameNative<void(), 0xF6062E089251C898> FORCE_LIGHTNING_FLASH;
		static GameNative<void(const char* p0), 0x02DEAAC8F8EA7FE7> _0x02DEAAC8F8EA7FE7;
		static GameNative<void(const char* name), 0x11B56FBBF7224868> PRELOAD_CLOUD_HAT;
		static GameNative<void(const char* name, float transitionTime), 0xFC4842A34657BFCB> LOAD_CLOUD_HAT;
		static GameNative<void(const char* name, float p1), 0xA74802FB8D0B7814> UNLOAD_CLOUD_HAT;
		static GameNative<void(), 0x957E790EA1727B64> _CLEAR_CLOUD_HAT;
		static GameNative<void(float opacity), 0xF36199225D6D8C86> _SET_CLOUD_HAT_OPACITY;
		static GameNative<float(), 0x20AC25E781AE4A84> _GET_CLOUD_HAT_OPACITY;
		static GameNative<int(), 0x9CD27B0045628463> GET_GAME_TIMER;
		static GameNative<float(), 0x15C40837039FFAF7> GET_FRAME_TIME;
		static GameNative<float(), 0xE599A503B3837E1B> _GET_BENCHMARK_TIME;
		static GameNative<int(), 0xFC8202EFC642E6F2> GET_FRAME_COUNT;
		static GameNative<float(float startRange, float endRange), 0x313CE5879CEB6FCD> GET_RANDOM_FLOAT_IN_RANGE;
		static GameNative<int(int startRange, int endRange), 0xD53343AA4FB7DD28> GET_RANDOM_INT_IN_RANGE;
		static GameNative<BOOL(float x, float y, float z, float* groundZ, BOOL unk), 0xC906A7DAB05C8D2B> GET_GROUND_Z_FOR_3D_COORD;
		static GameNative<BOOL(float x, float y, float z, float* groundZ, Vector3* offsets), 0x8BDC7BFC57A81E76> _GET_GROUND_Z_COORD_WITH_OFFSETS;
		static GameNative<float(float p0), 0xC843060B5765DCE7> ASIN;
		static GameNative<float(float p0), 0x1D08B970013C34B6> ACOS;
		static GameNative<float(float p0), 0x632106CC96E82E91> TAN;
		static GameNative<float(float p0), 0xA9D1795CD5043663> ATAN;
		static GameNative<float(float p0, float p1), 0x8927CBF9D22261A4> ATAN2;
		static GameNative<float(float x1, float y1, float z1, float x2, float y2, float z2, BOOL useZ), 0xF1B760881820C952> GET_DISTANCE_BETWEEN_COORDS;
		static GameNative<float(float x1, float y1, float x2, float y2), 0x186FC4BE848E1C92> GET_ANGLE_BETWEEN_2D_VECTORS;
		static GameNative<float(float dx, float dy), 0x2FFB6B224F4B2926> GET_HEADING_FROM_VECTOR_2D;
		static GameNative<float(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, BOOL p9), 0x7F8F6405F4777AF6> _0x7F8F6405F4777AF6;
		static GameNative<Vector3(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, BOOL p9), 0x21C235BC64831E5A> _0x21C235BC64831E5A;
		static GameNative<BOOL(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11, Any* p12), 0xF56DFB7B61BE7276> _0xF56DFB7B61BE7276;
		static GameNative<void(int* address, int offset), 0x933D6A9EEC1BACD0> SET_BIT;
		static GameNative<void(int* address, int offset), 0xE80492A9AC099A93> CLEAR_BIT;
		static GameNative<Hash(const char* string), 0xD24D37CC275948CC> GET_HASH_KEY;
		static GameNative<void(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, Any* p9, Any* p10, Any* p11, Any* p12), 0xF2F6A2FA49278625> _0xF2F6A2FA49278625;
		static GameNative<BOOL(float p0, float p1, float p2, float p3, float p4, float p5, BOOL p6, BOOL p7, BOOL p8, BOOL p9, BOOL p10, Any p11, BOOL p12), 0xA61B4DF533DCB56E> IS_AREA_OCCUPIED;
		static GameNative<BOOL(float x, float y, float z, float range, BOOL p4, BOOL p5, BOOL p6, BOOL p7, BOOL p8, Any p9, BOOL p10), 0xADCDE75E1C60F32D> IS_POSITION_OCCUPIED;
		static GameNative<BOOL(float p0, float p1, float p2, float p3, float p4, float p5, Any p6), 0xE54E209C35FFA18D> IS_POINT_OBSCURED_BY_A_MISSION_ENTITY;
		static GameNative<void(float X, float Y, float Z, float radius, BOOL p4, BOOL ignoreCopCars, BOOL ignoreObjects, BOOL p7), 0xA56F01F3765B93A0> CLEAR_AREA;
		static GameNative<void(float x, float y, float z, float radius, BOOL p4, BOOL p5, BOOL p6, BOOL p7), 0x957838AAF91BD12D> _CLEAR_AREA_OF_EVERYTHING;
		static GameNative<void(float x, float y, float z, float radius, BOOL p4, BOOL p5, BOOL p6, BOOL p7, BOOL p8), 0x01C7B9B38428AEB6> CLEAR_AREA_OF_VEHICLES;
		static GameNative<void(float p0, float p1, float p2, float p3, float p4, float p5, float p6, BOOL p7, BOOL p8, BOOL p9, BOOL p10, BOOL p11), 0x11DB3500F042A8AA> CLEAR_ANGLED_AREA_OF_VEHICLES;
		static GameNative<void(float x, float y, float z, float radius, int flags), 0xDD9B9B385AAC7F5B> CLEAR_AREA_OF_OBJECTS;
		static GameNative<void(float x, float y, float z, float radius, int flags), 0xBE31FD6CE464AC59> CLEAR_AREA_OF_PEDS;
		static GameNative<void(float x, float y, float z, float radius, int flags), 0x04F8FC8FCF58F88D> CLEAR_AREA_OF_COPS;
		static GameNative<void(float x, float y, float z, float radius, BOOL isNetworkGame), 0x0A1CB9094635D1A6> CLEAR_AREA_OF_PROJECTILES;
		static GameNative<void(), 0x7EC6F9A478A6A512> _0x7EC6F9A478A6A512;
		static GameNative<void(BOOL unk), 0xC9BF75D28165FF77> SET_SAVE_MENU_ACTIVE;
		static GameNative<int(), 0x397BAA01068BAA96> _0x397BAA01068BAA96;
		static GameNative<void(BOOL toggle), 0xB938B7E6D3C0620C> SET_CREDITS_ACTIVE;
		static GameNative<void(BOOL toggle), 0xB51B9AB9EF81868C> _0xB51B9AB9EF81868C;
		static GameNative<BOOL(), 0x075F1D57402C93BA> HAVE_CREDITS_REACHED_END;
		static GameNative<void(const char* scriptName), 0x9DC711BC69C548DF> TERMINATE_ALL_SCRIPTS_WITH_THIS_NAME;
		static GameNative<void(), 0x9243BAC96D64C050> NETWORK_SET_SCRIPT_IS_SAFE_FOR_NETWORK_GAME;
		static GameNative<int(float x, float y, float z, float p3, Any p4), 0x1F464EF988465A81> ADD_HOSPITAL_RESTART;
		static GameNative<void(int hospitalIndex, BOOL toggle), 0xC8535819C450EBA8> DISABLE_HOSPITAL_RESTART;
		static GameNative<Any(float p0, float p1, float p2, float p3, Any p4), 0x452736765B31FC4B> ADD_POLICE_RESTART;
		static GameNative<void(int policeIndex, BOOL toggle), 0x23285DED6EBD7EA3> DISABLE_POLICE_RESTART;
		static GameNative<void(float x, float y, float z, float heading), 0x706B5EDCAA7FA663> _SET_CUSTOM_RESPAWN_POSITION;
		static GameNative<void(), 0xA2716D40842EAF79> _SET_NEXT_RESPAWN_TO_CUSTOM;
		static GameNative<void(BOOL disableRespawn), 0x2C2B3493FBF51C71> _DISABLE_AUTOMATIC_RESPAWN;
		static GameNative<void(BOOL toggle), 0x21FFB63D8C615361> IGNORE_NEXT_RESTART;
		static GameNative<void(BOOL toggle), 0x4A18E01DF2C87B86> SET_FADE_OUT_AFTER_DEATH;
		static GameNative<void(BOOL toggle), 0x1E0B4DC0D990A4E7> SET_FADE_OUT_AFTER_ARREST;
		static GameNative<void(BOOL toggle), 0xDA66D2796BA33F12> SET_FADE_IN_AFTER_DEATH_ARREST;
		static GameNative<void(BOOL toggle), 0xF3D78F59DFE18D79> SET_FADE_IN_AFTER_LOAD;
		static GameNative<Any(float p0, float p1, float p2, float p3, Any* p4, Any p5, Any p6), 0xC0714D0A7EEECA54> REGISTER_SAVE_HOUSE;
		static GameNative<void(int index, BOOL p1, BOOL p2), 0x4F548CABEAE553BC> SET_SAVE_HOUSE;
		static GameNative<BOOL(BOOL p0, float p1, float p2, float p3, float p4, BOOL p5, float p6, float p7), 0x1162EA8AE9D24EEA> OVERRIDE_SAVE_HOUSE;
		static GameNative<Any(Any p0, Any p1, Any p2, Any p3), 0xA4A0065E39C9F25C> _0xA4A0065E39C9F25C;
		static GameNative<void(), 0x50EEAAD86232EE55> DO_AUTO_SAVE;
		static GameNative<Any(), 0x6E04F06094C87047> _0x6E04F06094C87047;
		static GameNative<BOOL(), 0x69240733738C19A0> IS_AUTO_SAVE_IN_PROGRESS;
		static GameNative<Any(), 0x2107A3773771186D> _0x2107A3773771186D;
		static GameNative<void(), 0x06462A961E94B67C> _0x06462A961E94B67C;
		static GameNative<void(Any p0, Any p1), 0xE0E500246FF73D66> BEGIN_REPLAY_STATS;
		static GameNative<void(Any value), 0x69FE6DC87BD2A5E9> ADD_REPLAY_STAT_VALUE;
		static GameNative<void(), 0xA23E821FBDF8A5F2> END_REPLAY_STATS;
		static GameNative<Any(), 0xD642319C54AADEB6> _0xD642319C54AADEB6;
		static GameNative<Any(), 0x5B1F2E327B6B6FE1> _0x5B1F2E327B6B6FE1;
		static GameNative<Any(), 0x2B626A0150E4D449> _0x2B626A0150E4D449;
		static GameNative<Any(), 0xDC9274A7EF6B2867> _0xDC9274A7EF6B2867;
		static GameNative<Any(Any p0), 0x8098C8D6597AAE18> _0x8098C8D6597AAE18;
		static GameNative<void(), 0x1B1AB132A16FDA55> CLEAR_REPLAY_STATS;
		static GameNative<Any(), 0x72DE52178C291CB5> _0x72DE52178C291CB5;
		static GameNative<Any(), 0x44A0BDC559B35F6E> _0x44A0BDC559B35F6E;
		static GameNative<Any(), 0xEB2104E905C6F2E9> _0xEB2104E905C6F2E9;
		static GameNative<Any(), 0x2B5E102E4A42F2BF> _0x2B5E102E4A42F2BF;
		static GameNative<BOOL(), 0x8A75CE2956274ADD> IS_MEMORY_CARD_IN_USE;
		static GameNative<void(float x1, float y1, float z1, float x2, float y2, float z2, int damage, BOOL p7, Hash weaponHash, Ped ownerPed, BOOL isAudible, BOOL isInvisible, float speed), 0x867654CBC7606F2C> SHOOT_SINGLE_BULLET_BETWEEN_COORDS;
		static GameNative<void(float x1, float y1, float z1, float x2, float y2, float z2, int damage, BOOL p7, Hash weaponHash, Ped ownerPed, BOOL isAudible, BOOL isInvisible, float speed, Entity entity), 0xE3A7742E0B7A2F8B> _SHOOT_SINGLE_BULLET_BETWEEN_COORDS_PRESET_PARAMS;
		static GameNative<void(float x1, float y1, float z1, float x2, float y2, float z2, int damage, BOOL p7, Hash weaponHash, Ped ownerPed, BOOL isAudible, BOOL isInvisible, float speed, Entity entity, BOOL p14, BOOL p15, BOOL p16, BOOL p17), 0xBFE5756E7407064A> _SHOOT_SINGLE_BULLET_BETWEEN_COORDS_WITH_EXTRA_PARAMS;
		static GameNative<void(Hash modelHash, Vector3* minimum, Vector3* maximum), 0x03E8D3D5F549087A> GET_MODEL_DIMENSIONS;
		static GameNative<void(int fakeWantedLevel), 0x1454F2448DE30163> SET_FAKE_WANTED_LEVEL;
		static GameNative<int(), 0x4C9296CBCD1B971E> GET_FAKE_WANTED_LEVEL;
		static GameNative<BOOL(int* address, int offset), 0xA921AA820C25702F> IS_BIT_SET;
		static GameNative<void(BOOL toggle), 0xF14878FC50BEC6EE> USING_MISSION_CREATOR;
		static GameNative<void(BOOL p0), 0xDEA36202FC3382DF> _0xDEA36202FC3382DF;
		static GameNative<void(BOOL toggle), 0x19E00D7322C6F85B> SET_MINIGAME_IN_PROGRESS;
		static GameNative<BOOL(), 0x2B4A15E44DE0F478> IS_MINIGAME_IN_PROGRESS;
		static GameNative<BOOL(), 0x7B30F65D7B710098> IS_THIS_A_MINIGAME_SCRIPT;
		static GameNative<BOOL(), 0x61A23B7EDA9BDA24> IS_SNIPER_INVERTED;
		static GameNative<BOOL(), 0xD3D15555431AB793> _0xD3D15555431AB793;
		static GameNative<int(int profileSetting), 0xC488FF2356EA7791> GET_PROFILE_SETTING;
		static GameNative<BOOL(const char* string1, const char* string2), 0x0C515FAB3FF9EA92> ARE_STRINGS_EQUAL;
		static GameNative<int(const char* str1, const char* str2, BOOL matchCase, int maxLength), 0x1E34710ECD4AB0EB> COMPARE_STRINGS;
		static GameNative<int(int value), 0xF0D31AD191A74F87> ABSI;
		static GameNative<float(float value), 0x73D57CFFDD12C355> ABSF;
		static GameNative<BOOL(float x1, float y1, float z1, float x2, float y2, float z2), 0xFEFCF11B01287125> IS_SNIPER_BULLET_IN_AREA;
		static GameNative<BOOL(float x1, float y1, float z1, float x2, float y2, float z2, BOOL ownedByPlayer), 0x5270A8FBC098C3F8> IS_PROJECTILE_IN_AREA;
		static GameNative<BOOL(float x1, float y1, float z1, float x2, float y2, float z2, int type, BOOL p7), 0x2E0DC353342C4A6D> IS_PROJECTILE_TYPE_IN_AREA;
		static GameNative<BOOL(float p0, float p1, float p2, float p3, float p4, float p5, float p6, Any p7, BOOL p8), 0xF0BC12401061DEA0> IS_PROJECTILE_TYPE_IN_ANGLED_AREA;
		static GameNative<BOOL(float x, float y, float z, Hash projHash, float radius, BOOL ownedByPlayer), 0x34318593248C8FB2> IS_PROJECTILE_TYPE_WITHIN_DISTANCE;
		static GameNative<BOOL(float x1, float y1, float z1, float x2, float y2, float z2, Hash projHash, Vector3* projPos, BOOL ownedByPlayer), 0x8D7A43EC6A5FEA45> _GET_IS_PROJECTILE_TYPE_IN_AREA;
		static GameNative<BOOL(Ped ped, Hash projHash, float radius, Vector3* projPos, BOOL ownedByPlayer), 0xDFB4138EEFED7B81> _GET_PROJECTILE_NEAR_PED_COORDS;
		static GameNative<BOOL(Ped ped, Hash projHash, float radius, Vector3* projPos, Entity* projEnt, BOOL ownedByPlayer), 0x82FDE6A57EE4EE44> _GET_PROJECTILE_NEAR_PED;
		static GameNative<BOOL(float p0, float p1, float p2, float p3, float p4, float p5, float p6, BOOL p7), 0x1A8B5F3C01E2B477> IS_BULLET_IN_ANGLED_AREA;
		static GameNative<BOOL(float p0, float p1, float p2, float p3, BOOL p4), 0x3F2023999AD51C1F> IS_BULLET_IN_AREA;
		static GameNative<BOOL(float p0, float p1, float p2, float p3, float p4, float p5, BOOL p6), 0xDE0F6D7450D37351> IS_BULLET_IN_BOX;
		static GameNative<BOOL(float x, float y, float z, float p3, BOOL p4, BOOL p5), 0x9870ACFB89A90995> HAS_BULLET_IMPACTED_IN_AREA;
		static GameNative<BOOL(float p0, float p1, float p2, float p3, float p4, float p5, BOOL p6, BOOL p7), 0xDC8C5D7CFEAB8394> HAS_BULLET_IMPACTED_IN_BOX;
		static GameNative<BOOL(), 0xA72BC0B675B1519E> IS_ORBIS_VERSION;
		static GameNative<BOOL(), 0x4D982ADB1978442D> IS_DURANGO_VERSION;
		static GameNative<BOOL(), 0xF6201B4DAF662A9D> IS_XBOX360_VERSION;
		static GameNative<BOOL(), 0xCCA1072C29D096C2> IS_PS3_VERSION;
		static GameNative<BOOL(), 0x48AF36444B965238> IS_PC_VERSION;
		static GameNative<BOOL(), 0x9F1935CA1F724008> IS_AUSSIE_VERSION;
		static GameNative<BOOL(const char* string), 0xF22B6C47C6EAB066> IS_STRING_NULL;
		static GameNative<BOOL(const char* string), 0xCA042B6957743895> IS_STRING_NULL_OR_EMPTY;
		static GameNative<BOOL(const char* string, int* outInteger), 0x5A5F40FE637EB584> STRING_TO_INT;
		static GameNative<void(int* var, int rangeStart, int rangeEnd, int p3), 0x8EF07E15701D61ED> SET_BITS_IN_RANGE;
		static GameNative<int(int var, int rangeStart, int rangeEnd), 0x53158863FCC0893A> GET_BITS_IN_RANGE;
		static GameNative<int(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11, float p12, float p13, float p14, Any p15, Any p16), 0x1A992DA297A4630C> ADD_STUNT_JUMP;
		static GameNative<int(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11, float p12, float p13, float p14, float p15, float p16, Any p17, Any p18), 0xBBE5D803A5360CBF> ADD_STUNT_JUMP_ANGLED;
		static GameNative<void(int player), 0xDC518000E39DAE1F> DELETE_STUNT_JUMP;
		static GameNative<void(int p0), 0xE369A5783B866016> ENABLE_STUNT_JUMP_SET;
		static GameNative<void(int p0), 0xA5272EBEDD4747F6> DISABLE_STUNT_JUMP_SET;
		static GameNative<void(BOOL p0), 0xD79185689F8FD5DF> _0xD79185689F8FD5DF;
		static GameNative<BOOL(), 0x7A3F19700A4D0525> IS_STUNT_JUMP_IN_PROGRESS;
		static GameNative<BOOL(), 0x2272B0A1343129F4> IS_STUNT_JUMP_MESSAGE_SHOWING;
		static GameNative<int(), 0x996DD1E1E02F1008> _0x996DD1E1E02F1008;
		static GameNative<int(), 0x6856EC3D35C81EA4> _0x6856EC3D35C81EA4;
		static GameNative<void(), 0xE6B7B0ACD4E4B75E> CANCEL_STUNT_JUMP;
		static GameNative<void(BOOL toggle), 0x577D1284D6873711> SET_GAME_PAUSED;
		static GameNative<void(BOOL toggle), 0xAA391C728106F7AF> SET_THIS_SCRIPT_CAN_BE_PAUSED;
		static GameNative<void(BOOL toggle), 0xB98236CAAECEF897> SET_THIS_SCRIPT_CAN_REMOVE_BLIPS_CREATED_BY_ANY_SCRIPT;
		static GameNative<BOOL(Hash hash, int amount), 0x071E2A839DE82D90> _HAS_BUTTON_COMBINATION_JUST_BEEN_ENTERED;
		static GameNative<BOOL(Hash hash), 0x557E43C447E700A8> _HAS_CHEAT_STRING_JUST_BEEN_ENTERED;
		static GameNative<void(BOOL toggle), 0x9BAE5AD2508DF078> _USE_FREEMODE_MAP_BEHAVIOR;
		static GameNative<void(int flag), 0xC5F0A8EBD3F361CE> _SET_UNK_MAP_FLAG;
		static GameNative<BOOL(), 0x7EA2B6AF97ECA6ED> IS_FRONTEND_FADING;
		static GameNative<void(), 0x7472BB270D7B4F3E> POPULATE_NOW;
		static GameNative<int(), 0xCBAD6729F7B1F4FC> GET_INDEX_OF_CURRENT_LEVEL;
		static GameNative<void(int level), 0x740E14FAD5842351> SET_GRAVITY_LEVEL;
		static GameNative<void(Any* p0, Any p1, BOOL p2), 0xA9575F812C6A7997> START_SAVE_DATA;
		static GameNative<void(), 0x74E20C9145FB66FD> STOP_SAVE_DATA;
		static GameNative<int(BOOL p0), 0xA09F896CE912481F> _0xA09F896CE912481F;
		static GameNative<void(Any* p0, const char* name), 0x34C9EE5986258415> REGISTER_INT_TO_SAVE;
		static GameNative<void(Any* p0, Any* p1), 0xA735353C77334EA0> _0xA735353C77334EA0;
		static GameNative<void(Any* p0, const char* name), 0x10C2FA78D0E128A1> REGISTER_ENUM_TO_SAVE;
		static GameNative<void(Any* p0, const char* name), 0x7CAEC29ECB5DFEBB> REGISTER_FLOAT_TO_SAVE;
		static GameNative<void(Any* p0, const char* name), 0xC8F4131414C835A1> REGISTER_BOOL_TO_SAVE;
		static GameNative<void(Any* p0, const char* name), 0xEDB1232C5BEAE62F> REGISTER_TEXT_LABEL_TO_SAVE;
		static GameNative<void(Any* p0, const char* name), 0x6F7794F28C6B2535> _0x6F7794F28C6B2535;
		static GameNative<void(Any* p0, const char* name), 0x48F069265A0E4BEC> _0x48F069265A0E4BEC;
		static GameNative<void(Any* p0, const char* name), 0x8269816F6CFD40F8> _0x8269816F6CFD40F8;
		static GameNative<void(Any* p0, const char* name), 0xFAA457EF263E8763> _0xFAA457EF263E8763;
		static GameNative<void(Any* p0, int p1, const char* structName), 0xBF737600CDDBEADD> _START_SAVE_STRUCT;
		static GameNative<void(), 0xEB1774DF12BB9F12> STOP_SAVE_STRUCT;
		static GameNative<void(Any* p0, int p1, const char* arrayName), 0x60FE567DF1B1AF9D> _START_SAVE_ARRAY;
		static GameNative<void(), 0x04456F95153C6BE4> STOP_SAVE_ARRAY;
		static GameNative<void(int dispatchService, BOOL toggle), 0xDC0F817884CDD856> ENABLE_DISPATCH_SERVICE;
		static GameNative<void(int type, BOOL toggle), 0x9B2BD3773123EA2F> _0x9B2BD3773123EA2F;
		static GameNative<int(int dispatchService), 0xEB4A0C2D56441717> _GET_NUMBER_OF_DISPATCHED_UNITS_FOR_PLAYER;
		static GameNative<BOOL(int incidentType, float x, float y, float z, int p5, float radius, int* outIncidentID), 0x3F892CAF67444AE7> CREATE_INCIDENT;
		static GameNative<BOOL(int incidentType, Ped ped, int amountOfPeople, float radius, int* outIncidentID), 0x05983472F0494E60> CREATE_INCIDENT_WITH_ENTITY;
		static GameNative<void(int incidentId), 0x556C1AA270D5A207> DELETE_INCIDENT;
		static GameNative<BOOL(int incidentId), 0xC8BC6461E629BEAA> IS_INCIDENT_VALID;
		static GameNative<void(Any p0, Any p1, Any p2), 0xB08B85D860E7BA3C> _0xB08B85D860E7BA3C;
		static GameNative<void(Any p0, float p1), 0xD261BA3E7E998072> _0xD261BA3E7E998072;
		static GameNative<BOOL(float x1, float y1, float z1, float x2, float y2, float z2, float distance, Vector3* spawnPoint), 0x6874E2190B0C1972> FIND_SPAWN_POINT_IN_DIRECTION;
		static GameNative<Any(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8), 0x67F6413D3220E18D> _0x67F6413D3220E18D;
		static GameNative<BOOL(Any p0), 0x1327E2FE9746BAEE> _0x1327E2FE9746BAEE;
		static GameNative<void(Any p0, BOOL p1), 0xB129E447A2EDA4BF> _0xB129E447A2EDA4BF;
		static GameNative<Any(float p0, float p1, float p2, float p3, float p4, float p5, BOOL p6, BOOL p7), 0x32C7A7E8C43A1F80> _0x32C7A7E8C43A1F80;
		static GameNative<void(Any p0, BOOL p1), 0xE6869BECDD8F2403> _0xE6869BECDD8F2403;
		static GameNative<void(Ped ped, BOOL toggle, BOOL p2), 0x28A04B411933F8A6> ENABLE_TENNIS_MODE;
		static GameNative<BOOL(Ped ped), 0x5D5479D115290C3F> IS_TENNIS_MODE;
		static GameNative<void(Any p0, Any* p1, Any* p2, float p3, float p4, BOOL p5), 0xE266ED23311F24D4> _0xE266ED23311F24D4;
		static GameNative<BOOL(Any p0), 0x17DF68D720AA77F8> _0x17DF68D720AA77F8;
		static GameNative<BOOL(Any p0), 0x19BFED045C647C49> _0x19BFED045C647C49;
		static GameNative<BOOL(Any p0), 0xE95B0C7D5BA3B96B> _0xE95B0C7D5BA3B96B;
		static GameNative<void(Any p0, Any p1, float p2, float p3, float p4, BOOL p5), 0x8FA9C42FC5D7C64B> _0x8FA9C42FC5D7C64B;
		static GameNative<void(Any p0, const char* p1, float p2), 0x54F157E0336A3822> _0x54F157E0336A3822;
		static GameNative<void(Any p0, Any p1, Any p2), 0xD10F442036302D50> _0xD10F442036302D50;
		static GameNative<void(), 0x77A84429DD9F0A15> RESET_DISPATCH_IDEAL_SPAWN_DISTANCE;
		static GameNative<void(float p0), 0x6FE601A64180D423> SET_DISPATCH_IDEAL_SPAWN_DISTANCE;
		static GameNative<void(Any p0, float p1), 0x44F7CBC1BEB3327D> SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS;
		static GameNative<void(Any p0, float p1), 0x48838ED9937A15D1> SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS_MULTIPLIER;
		static GameNative<Any(float p0, float p1, float p2, float p3, float p4, float p5, float p6), 0x918C7B2D2FF3928B> _0x918C7B2D2FF3928B;
		static GameNative<Any(float p0, float p1, float p2, float p3), 0x2D4259F1FEB81DA9> _0x2D4259F1FEB81DA9;
		static GameNative<void(Any p0), 0x264AC28B01B353A5> REMOVE_DISPATCH_SPAWN_BLOCKING_AREA;
		static GameNative<void(), 0xAC7BFD5C1D83EA75> RESET_DISPATCH_SPAWN_BLOCKING_AREAS;
		static GameNative<void(), 0xD9F692D349249528> _0xD9F692D349249528;
		static GameNative<void(Any p0, Any p1), 0xE532EC1A63231B4F> _0xE532EC1A63231B4F;
		static GameNative<void(Any p0, Any p1, Any p2), 0xB8721407EE9C3FF6> _0xB8721407EE9C3FF6;
		static GameNative<void(), 0xB3CD58CCA6CDA852> _0xB3CD58CCA6CDA852;
		static GameNative<void(BOOL p0), 0x2587A48BC88DFADF> _0x2587A48BC88DFADF;
		static GameNative<void(int p0, const char* windowTitle, Any* p2, const char* defaultText, const char* defaultConcat1, const char* defaultConcat2, const char* defaultConcat3, const char* defaultConcat4, const char* defaultConcat5, const char* defaultConcat6, const char* defaultConcat7, int maxInputLength), 0xCA78CFA0366592FE> _DISPLAY_ONSCREEN_KEYBOARD_2;
		static GameNative<void(int p0, const char* windowTitle, const char* p2, const char* defaultText, const char* defaultConcat1, const char* defaultConcat2, const char* defaultConcat3, int maxInputLength), 0x00DC833F2568DBF6> DISPLAY_ONSCREEN_KEYBOARD;
		static GameNative<int(), 0x0CF2B696BBF945AE> UPDATE_ONSCREEN_KEYBOARD;
		static GameNative<const char* (), 0x8362B09B91893647> GET_ONSCREEN_KEYBOARD_RESULT;
		static GameNative<void(int p0), 0x3ED1438C1F5C6612> _0x3ED1438C1F5C6612;
		static GameNative<void(Hash hash, BOOL p1), 0xA6A12939F16D85BE> _REMOVE_STEALTH_KILL;
		static GameNative<void(int p0, BOOL p1), 0x1EAE0A6E978894A2> _0x1EAE0A6E978894A2;
		static GameNative<void(Player player), 0xA66C71C98D5F2CFB> SET_EXPLOSIVE_AMMO_THIS_FRAME;
		static GameNative<void(Player player), 0x11879CDD803D30F4> SET_FIRE_AMMO_THIS_FRAME;
		static GameNative<void(Player player), 0xFF1BED81BFDC0FE0> SET_EXPLOSIVE_MELEE_THIS_FRAME;
		static GameNative<void(Player player), 0x57FFF03E423A4C0B> SET_SUPER_JUMP_THIS_FRAME;
		static GameNative<BOOL(), 0x6FDDF453C0C756EC> _0x6FDDF453C0C756EC;
		static GameNative<void(), 0xFB00CA71DA386228> _0xFB00CA71DA386228;
		static GameNative<Any(), 0x5AA3BEFA29F03AD4> _0x5AA3BEFA29F03AD4;
		static GameNative<void(), 0xE3D969D2785FFB5E> _0xE3D969D2785FFB5E;
		static GameNative<void(), 0xC0AA53F866B3134D> _RESET_LOCALPLAYER_STATE;
		static GameNative<void(Any p0, Any p1, Any p2, Any p3), 0x0A60017F841A54F2> _0x0A60017F841A54F2;
		static GameNative<void(), 0x1FF6BF9A63E5757F> _0x1FF6BF9A63E5757F;
		static GameNative<void(Any p0, Any p1, Any p2, Any p3), 0x1BB299305C3E8C13> _0x1BB299305C3E8C13;
		static GameNative<BOOL(Any p0, Any* p1, Any* p2), 0x8EF5573A1F801A5C> _0x8EF5573A1F801A5C;
		static GameNative<void(), 0x92790862E36C2ADA> _0x92790862E36C2ADA;
		static GameNative<void(), 0xC7DB36C24634F52B> _0xC7DB36C24634F52B;
		static GameNative<void(), 0x437138B6A830166A> _0x437138B6A830166A;
		static GameNative<void(), 0x37DEB0AA183FB6D8> _0x37DEB0AA183FB6D8;
		static GameNative<Any(), 0xEA2F2061875EED90> _0xEA2F2061875EED90;
		static GameNative<Any(), 0x3BBBD13E5041A79E> _0x3BBBD13E5041A79E;
		static GameNative<BOOL(), 0xA049A5BE0F04F2F8> _0xA049A5BE0F04F2F8;
		static GameNative<Any(), 0x4750FC27570311EC> _0x4750FC27570311EC;
		static GameNative<Any(), 0x1B2366C3F2A5C8DF> _0x1B2366C3F2A5C8DF;
		static GameNative<void(), 0xEB6891F03362FB12> _FORCE_SOCIAL_CLUB_UPDATE;
		static GameNative<BOOL(), 0x14832BF2ABA53FC5> _HAS_ALL_CHUNKS_ON_HDD;
		static GameNative<void(), 0xC79AE21974B01FB2> _CLEANUP_ASYNC_INSTALL;
		static GameNative<BOOL(), 0x684A41975F077262> _0x684A41975F077262;
		static GameNative<Any(), 0xABB2FA71C83A1B72> _0xABB2FA71C83A1B72;
		static GameNative<void(BOOL toggle), 0x4EBB7E87AA0DBED4> _SET_SHOW_PED_IN_PAUSE_MENU;
		static GameNative<BOOL(), 0x9689123E3F213AA5> _GET_SHOW_PED_IN_PAUSE_MENU;
		static GameNative<void(BOOL p0), 0x9D8D44ADBBA61EF2> _0x9D8D44ADBBA61EF2;
		static GameNative<void(), 0x23227DF0B2115469> _0x23227DF0B2115469;
		static GameNative<Any(), 0xD10282B6E3751BA0> _0xD10282B6E3751BA0;
	};
};